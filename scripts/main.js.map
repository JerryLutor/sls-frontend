{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/map/map.css?b431","webpack:///external \"window.d3\"","webpack:///./src/components/map/links.tsx","webpack:///./src/utils.ts","webpack:///./src/types.ts","webpack:///./src/components/map/nodes.tsx","webpack:///./src/components/map/consts.ts","webpack:///./src/components/map/tooltip.tsx","webpack:///./src/legacy-actions.ts","webpack:///./src/actions.ts","webpack:///./src/components/map/index.tsx","webpack:///./src/components/map/convert.ts","webpack:///./src/components/button/index.tsx","webpack:///./src/components/device-control/index.tsx","webpack:///./src/components/device-page/clusters.ts","webpack:///./src/components/safe-image/index.tsx","webpack:///./src/components/power-source/index.tsx","webpack:///./src/components/zigbee/ActionTH.tsx","webpack:///./src/components/zigbee/index.tsx","webpack:///./src/binaryUtils.ts","webpack:///./src/components/discovery/device-card.tsx","webpack:///./src/websocket.ts","webpack:///./src/components/device-page/bind.tsx","webpack:///./src/components/device-page/bind-row.tsx","webpack:///./src/components/discovery/touchlink-device-card.tsx","webpack:///./src/components/discovery/index.tsx","webpack:///./src/store.ts","webpack:///./src/components/log-viewer/index.tsx","webpack:///./src/components/tree-view/index.tsx","webpack:///./src/components/code-editor/codemirror.tsx","webpack:///./src/components/code-editor/index.tsx","webpack:///./src/components/universal-editor/index.tsx","webpack:///./src/components/device-page/simple-bind.tsx","webpack:///./src/components/device-page/info.tsx","webpack:///./src/components/tab-panel/index.tsx","webpack:///./src/components/device-page/index.tsx","webpack:///./src/index.tsx","webpack:///./src/components/map/tooltip.css?6018","webpack:///./src/components/power-source/style.css?c52c","webpack:///./src/components/device-page/style.css?20cc","webpack:///./src/components/zigbee/style.css","webpack:///./src/components/discovery/style.css?5e9d","webpack:///external \"window.luaparse\"","webpack:///./src/components/code-editor/style.css?9305","webpack:///external \"window.CodeMirror\"","webpack:///./src/components/tree-view/style.css?8a62","webpack:///./src/components/log-viewer/style.css?542d"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","d3","ref","componentDidMount","current","this","link","props","render","id","rest","linkType","type","className","strokeWidth","xlinkHref","textPath","startOffset","linkQuality","filter","dy","links","x","y","width","height","in","map","index","genDeviceDetailsLink","deviceIdentifier","encodeURIComponent","toHex","input","padding","repeat","toString","substr","toUpperCase","genDeviceImageUrl","device","modelName","ModelId","replace","last","collection","bitOps","bitIndex","callApi","url","method","params","payload","callback","contentType","Promise","resolve","reject","fetch","keys","join","body","then","res","status","Error","statusText","catch","e","error","undefined","InterviewState","DeviceSupportStatus","PowerSource","lastSeen","timeInfo","last_seen","ts","secs","Math","floor","v","getStarShape","innerCircleArms","styleStarWidth","innerOuterRadiusRatio","centerX","centerY","innerRadius","outerRadius","angle","PI","totalArms","points","cos","sin","calcStarPoints","isOnline","state","imgUrl","onMouseOut","node","onMouseOver","onDblClick","onImageError","setState","time","deviceType","cn","class","onError","href","updateDrag","simulation","dragForce","on","active","alphaTarget","restart","fx","fy","componentDidUpdate","nodes","GATEWAY","nwkAddr","friendly_name","ManufName","info","tooltip","strings","ieeeAddr","st","linkquality","getTooltip","dev","loadBindsList","action","err","response","rule","idx","store","setLoading","isLoading","getDeviceInfo","isError","setBindRules","bindRules","getDeviceBinds","getZigbeeDevicesList","showLoading","devices","removeBind","bindRule","createBind","setStateValue","setSimpleBindValue","setSimpleBind","startInterview","currentInterviewState","fetchTimeInfo","setJoinDuration","duration","target","enableJoin","fetchLogsBuffer","logs","split","getCurrentLogLevel","logLevel","clearLogs","clearLogsBuffer","setLogLevel","level","setCurrentFileContent","currentFileContent","evalCode","code","executionResults","clearExecutionResults","writeFile","path","content","getFilesList","files","readFile","file","currentFile","deleteFile","renameDevice","old","newName","new","removeDevice","force","refreshState","touchlinkScan","touchlinkResuts","touchlinkScanInProgress","touchlinkList","currentChannel","touchlinkIdentify","touchlinkRest","getDistance","setTooltip","tooltipNode","removeTooltip","openDetailsWindow","open","graph","updateNodes","updateForces","linkLabel","attr","max","min","source","bbox","getBBox","linkForce","distance","strength","chargeForce","distanceMin","distanceMax","repelForce","collisionForce","iterations","centerForce","initPage","coordinator","getLinkType","dest","forEach","deviceData","friendlyName","Array","isArray","Rtg","route","destination","find","convert2graph","getBoundingClientRect","container","viewBox","foreignObject","onClick","item","children","onBindClick","location","onRenameClick","prompt","onRemoveClick","confirm","validDevice","role","ZigbeeClusters","isOk","description","PowerSourceComp","battery","batteryClass","hasSecondaryPowerSource","Battery","title","EmergencyMains","MainsThreePhase","EmergencyMainsConstantPower","MainsSinglePhase","plug","DC","Unknown","event","preventDefault","stopPropagation","column","renderArrow","currentDirection","invisible","saveState","storeData","sortDirection","sortColumn","localStorage","setItem","JSON","stringify","loadData","setInterval","onInterviewClick","Interview","State","success","onSortChange","sortDir","currentTime","Date","now","restoreState","storedState","getItem","restored","parse","renderDevicesTable","renderInterviewState","interviewTrigger","getSupportTitle","supported","Supported","UnSupported","sortedDevices","adaptive","zigbee","titile","flags","src","EventLabels","Map","RowCol","EventRow","eventName","events","ParentnwkAddr","ep","ProfileId","DeviceId","evt","manualInterviewStarted","updateTimerId","currentTimestamp","isDone","getLastEvent","getLastUpdateTime","messageTimestamp","round","getLastUpdateTimeMessage","getInterviewText","lastEvent","renderManualInterviewHelper","lastUpdateTime","blink","componentWillReceiveProps","nextProps","nextContext","clearInterval","groupedEvents","eventsCount","progressValue","style","entries","listener","removeListener","indexOf","emit","args","once","remove","remoteSubscribe","category","categories","includes","ws","send","onMessageReceive","wsEvent","em","console","log","EventEmitter","connect","hostname","document","wsUrl","search","addEventListener","subscribe","eventCategory","consumer","manager","getClusterName","addBraces","cleanName","onRuleChange","copyRules","onUnBindClick","renderBindsTable","scope","onChange","fields","isValidBindRule","some","getDeviceDisplayName","onDstChange","DstNwkAddr","DstEp","onClusterChange","parseInt","SrcEp","ClusterId","onDstEpChange","isExistingBinding","renderDstSelect","options","values","In","kvp","hasSelectedEpStr","label","selected","unshift","hidden","disabled","renderClusterId","optionGroups","epNumber","clusters","Out","renderDstEp","dstDevice","dstEndpoints","concat","has","endpoints","epName","renderActionButton","onIdentifyClick","onResetClick","LinkQuality","wsEventsData","processZigbeeEvent","message","timestamp","joinDuration","targetRouter","position","disableJoin","fetchTlResults","setTimeout","scanTL","renderTLdevices","renderDevices","sortedEvents","reverse","renderJoinButton","routers","router","renderTlStartButton","renderEmptyScreen","hasAnyEvents","initialState","forceRender","onFollowLogChange","followLog","onClearScreenClick","onClearCacheClick","onLogLevelChange","scrollToBottom","scrollTop","scrollHeight","getState","copyLogs","checked","for","line","lineNum","onDeleteClick","items","onItemClick","registerHelper","text","found","parseResult","from","Pos","to","codemirrorValueChanged","doc","change","origin","getValue","config","codeMirror","fromTextArea","setValue","setSize","currentCode","setOption","prevScrollPosition","getScrollInfo","prevCursor","getCursor","scrollTo","left","top","setCursor","onCodeChange","onExecuteCode","onSaveCode","onCreateFile","fileName","startsWith","loadFiles","loadFile","toggleSideBar","sideBarIsVisible","onFormatClick","getFileType","renderCodeExecutionResults","fileExtPattern","test","exec","getMode","json","theme","styleActiveLine","lineNumbers","lint","gutters","extraKeys","hasExecutionResults","hasCode","wrapper","toggled","placeholder","readOnly","changeHandler","valueAsNumber","step","onBlur","refresh","renderSimpleBinds","simpleBindRules","SB","kv","param","renderDeviceInfo","inClusters","clusterId","cluster","outClusters","profId","devId","isActive","onTabLinkClick","activeTab","initializeDefaultTab","defaultTab","tabs","TabComponent","searchParams","URL","paramActiveTab","deviceId","loader","processZigbeData","applyStateChange","DevicePageApp","ZigbeeTableApp","MapApp","DiscoveryApp","LogViewerApp","CodeEditorApp","selector","clean","luaparse","CodeMirror"],"mappings":"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","file":"scripts/main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"2YZa\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3UsUxhqLZHNtuszm8EI_1s\",\"img\":\"fuuZbvihQGWIy3CO8t5fw\",\"node\":\"I_ddn1k4fvLAQLh2qam_d\",\"link\":\"oJeonYZxCbLDqS9yrBiG5\",\"linkLabel\":\"ipEfrGz4VI8P2v-Hm0MgN\",\"links\":\"qlfIBJJwZ24x2b-QgFmLW\",\"nodes\":\"_1eZESYvchmyr8mmKIBCmBR\",\"EndDevice\":\"_113dX3BKO5fr4pAzdXC69K\",\"Coordinator\":\"_3-cVoVzbbOOvbMydd2G1J6\",\"Router\":\"_1NuCcdsGVpzqyMOXPkAEco\",\"Router2Coordinator\":\"_16GkebpgcHFnf2uJIgqlWu\",\"Router2Router\":\"_2nbipMaMmif3N4YQw4wgIC\",\"EndDevice2Coordinator\":\"_2kxuG_VR9_Fy7SGa4OSXVQ\",\"EndDevice2Router\":\"_3fc-4gZS_GCPbobf1dvlBo\",\"foreignObject\":\"nnn_JJwC5kC3gKbpcaXVA\",\"offline\":\"_2eFLqqfzaRUzHTEot23elk\"};","module.exports = window.d3;","import { LinkI } from \"./types\";\nimport { Component, ComponentChild, createRef, FunctionalComponent, h, RefObject } from \"preact\";\nimport * as style from \"./map.css\";\nimport cx from \"classnames\";\nimport * as d3 from \"d3\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nclass Link extends Component<LinkProps, {}> {\n    ref = createRef<SVGPathElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { link } = this.props;\n        d3.select(current as SVGPathElement).data([link]);\n    }\n\n    render(): ComponentChild {\n        const { link, id, ...rest } = this.props;\n        const linkType = link.type as string;\n        return (\n            <path\n                id={id}\n                {...rest}\n                className={cx(style.link, style[linkType])}\n                ref={this.ref as RefObject<SVGPathElement>}\n                strokeWidth={1}\n            />\n        );\n    }\n}\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nclass LinkLabel extends Component<LinkLabelProps, {}> {\n    ref = createRef<SVGTextElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { link } = this.props;\n        d3.select(current as SVGTextElement).data([link]);\n    }\n\n    render(): ComponentChild {\n        const { link, xlinkHref } = this.props;\n        /* eslint-disable @typescript-eslint/ban-ts-ignore */\n        //@ts-ignore\n        const textPath = <textPath startOffset=\"50%\" xlinkHref={xlinkHref}>{link.linkQuality}</textPath>;\n        return (\n            <text\n                filter={\"url(#solid)\"}\n                className={style.linkLabel}\n                ref={this.ref}\n                dy={4}\n            >{textPath}\n            </text>\n        );\n    }\n}\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionalComponent<LinksPros> = props => {\n    const { links } = props;\n    return (\n        <g className={style.links}>\n            <defs>\n                <filter x=\"-0.1\" y=\"0\" width=\"1.2\" height=\"1\" id=\"solid\">\n                    <feFlood flood-color=\"#eef5f9\" />\n                    <feComposite in=\"SourceGraphic\" />\n                </filter>\n            </defs>\n            {links.map((link: LinkI, index: number) => (\n                <Link\n                    id={`edgepath${index}`}\n                    key={`link${index}`}\n                    link={link}\n                />\n            ))}\n            {links.map((link: LinkI, index: number) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${index}`}\n                    key={`label${index}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { Device, Dictionary } from \"./types\";\nimport { TimeInfo } from \"./components/discovery/types\";\nimport { Notyf } from \"notyf\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/zigbee/device?dev=${encodeURIComponent(deviceIdentifier)}&activeTab=Info`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n/**\n * Returns an array with arrays of the given size.\n *\n * @param inputArr {Array} array to split\n * @param chunkSize {Integer} Size of every group\n */\nexport function chunkArray<T>(inputArr: T[], chunkSize: number): T[][] {\n\n    const results = [];\n    while (inputArr.length) {\n        results.push(inputArr.splice(0, chunkSize));\n    }\n    return results;\n}\n\nexport const encodeGetParams = (data: Dictionary<string | number>): string => Object.keys(data).map((key) => [key, data[key]].map(encodeURIComponent).join(\"=\")).join(\"&\");\n\nexport const sanitizeModelNameForImageUrl = (modelName: string): string => {\n    return modelName ? modelName.replace(\"/\", \"_\") : null;\n};\n\nexport const genDeviceImageUrl = (device: Device): string => (`https://slsys.github.io/Gateway/devices/png/${sanitizeModelNameForImageUrl(device.ModelId)}.png`);\n\nexport type LoadableFileTypes = \"js\" | \"css\";\n\nexport const fetchJs = (url) => {\n    return new Promise((resolve, reject) => {\n        const scriptElement = document.createElement(\"script\");\n        scriptElement.addEventListener(\"load\", resolve);\n        scriptElement.addEventListener(\"error\", reject);\n        scriptElement.setAttribute(\"type\", \"text/javascript\");\n        scriptElement.setAttribute(\"src\", url);\n        document.getElementsByTagName(\"head\")[0].appendChild(scriptElement);\n    });\n};\n\nexport const fetchStyle = (url) => {\n    return new Promise((resolve, reject) => {\n        const link = document.createElement(\"link\");\n        link.addEventListener(\"load\", resolve);\n        link.addEventListener(\"error\", reject);\n        link.setAttribute(\"type\", \"text/css\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"href\", url);\n        document.getElementsByTagName(\"head\")[0].appendChild(link)\n    });\n};\n\nexport function last<T>(collection: T[]) {\n    return collection[collection.length - 1];\n}\nexport function arrayUnique<T>(input: T[]) {\n    return input.filter((v, i, a) => a.indexOf(v) === i);\n}\n\n\n\nexport const bitOps = {\n    getBit: (n: number, bitIndex: number): number => {\n        const bitMask = 1 << bitIndex;\n        const result = n & bitMask;\n        return result >>> bitIndex;\n    },\n    setBit: (n: number, bitIndex: number): number => {\n        const bitMask = 1 << bitIndex;\n        return n | bitMask;\n    },\n    clearBit: (n: number, bitIndex: number): number => {\n        const bitMask = ~(1 << bitIndex);\n        return n & bitMask;\n    }\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\ntype HttMethod = \"GET\" | \"POST\" | \"DELETE\";\ntype ContentType = \"text\" | \"json\" | \"blob\";\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\nexport function callApi<T>(url: string, method: HttMethod, params: Dictionary<any>, payload: any, callback: CallbackHandler<T>, contentType: ContentType = \"json\"): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        fetch(`${url}?${encodeGetParams(params)}`, { method, body: payload })\n            .then((res) => {\n                if (res.status === 200) {\n                    return res[contentType]();\n                }\n                throw new Error(res.statusText);\n\n            })\n            .then(data => {\n                callback(false, data);\n                resolve();\n            })\n            .catch(e => {\n                new Notyf().error(e.toString());\n                callback(e.toString(), undefined);\n                reject();\n            });\n    })\n}\n\nexport const lastSeen = (device: Device, timeInfo: TimeInfo): string => {\n    if (device.last_seen && timeInfo) {\n        const lastSeen = timeInfo.ts - device.last_seen;\n        if (lastSeen < 0) {\n            return \"Now\";\n        }\n        return toHHMMSS(lastSeen);\n    }\n};","import { Named } from \"./components/tree-view\";\n\nexport type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\nexport type Dictionary<V> = { [index: string]: V }\n\nexport interface DeviceStats {\n    linkquality?: number;\n    battery?: number;\n    [k: string]: string | number| boolean;\n}\n\nexport const inteviewsCount = 4;\n\nexport enum InterviewState {\n    StateUnknown = -1,\n    AnnouncementReceived = 0,\n    DescriptionRecieved = 1,\n    EndpointsRecieved = 2,\n    ClustersRecieved = 3,\n    ModelRecieved = 4\n}\n\n\ninterface Interview {\n    /** Last intreview timestamp */\n    TS?: number;\n    /**\n     * 0 - получен анонс, запускает интервью\n     * 1 - получено описание устройства\n     * 2 - получено количествы активные эндпоинты\n     * 3 - получены кластеры\n     * 4- получена модель\n     */\n    State?: InterviewState;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Cluster {\n\n}\n\nexport interface Endpoint {\n    \"profId\": string;\n    \"In\"?: Dictionary<true>;\n    \"Out\"?: Dictionary<true>;\n    \"devId\": string;\n}\n\nexport enum DeviceSupportStatus {\n    Unknown = 0,\n    Supported = 1,\n    UnSupported = 2\n}\n\n\nexport enum PowerSource {\n    Unknown = 0,\n    MainsSinglePhase = 1,\n    MainsThreePhase = 2,\n    Battery = 3,\n    DC = 4,\n    EmergencyMainsConstantPower = 5,\n    EmergencyMains = 6\n}\n\nexport interface Device {\n    change?: number;\n    /** A 64-bit IEEE address (also called MAC address or Extended address) */\n    ieeeAddr?: string | undefined;\n    /** A 16-bi network address */\n    nwkAddr: string;\n    /** Node last message timestamp */\n    last_seen?: number | undefined;\n    type?: DeviceType | undefined;\n\n    ManufName?: string | undefined;\n    ModelId?: string | undefined;\n    /** Device status */\n    st?: DeviceStats | undefined;\n    friendly_name?: string | undefined;\n    /** Routes list, each item is an 16-bit network address (also called logical address or short address). */\n    Rtg?: string[] | undefined;\n    /** Features discovery status, aka interview */\n    Interview?: Interview | undefined;\n    PowerSource?: PowerSource | undefined;\n    ep?: Dictionary<Endpoint> | undefined;\n    supported?: DeviceSupportStatus | undefined;\n    SB?: Dictionary<string> | undefined;\n\n\n    flags?: number | undefined;\n    Rcf?: unknown;\n}\n\n\nexport interface FileDescriptor extends Named {\n    name: string;\n    size: number;\n    is_dir: boolean;\n}\n\n\nexport interface BindRule extends Dictionary<string | number> {\n    id?: number;\n    DstNwkAddr: string;\n    ClusterId: number;\n    SrcEp: number;\n    DstEp: number;\n}\n\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    Channel: number;\n    LinkQuality: number;\n    PanId: number;\n    TS: number;\n    ieeeAddr: string;\n}\nexport interface TouchLinkScanApiResponse {\n    TS: number;\n    devices: TouchLinkDevice[];\n    currentChannel: number;\n}","import { Component, ComponentChild, createRef, h, RefObject } from \"preact\";\n\n\nimport * as d3 from \"d3\";\nimport { LinkI, NodeI } from \"./types\";\nimport cx from \"classnames\";\n\nimport * as style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport { genDeviceImageUrl } from \"../../utils\";\nimport { TimeInfo } from \"../discovery/types\";\n\nconst calcStarPoints = (\n    centerX: number,\n    centerY: number,\n    innerCircleArms: number,\n    innerRadius: number,\n    outerRadius: number\n): string => {\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\n\nconst getStarShape = (innerCircleArms: number, styleStarWidth: number, innerOuterRadiusRatio: number): string => {\n    return calcStarPoints(\n        15,\n        15,\n        innerCircleArms,\n        styleStarWidth,\n        innerOuterRadiusRatio\n    );\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    time: TimeInfo;\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device, timeInfo: TimeInfo | undefined): boolean => {\n    if (!timeInfo || !device.last_seen) {\n        return true;\n    }\n    return timeInfo.ts - device.last_seen < offlineTimeout;\n};\n\ninterface NodeState {\n    imgUrl: string;\n}\n\nclass Node extends Component<NodeProps, NodeState> {\n    ref = createRef<SVGPolygonElement | SVGCircleElement | SVGImageElement>();\n    state = {\n        imgUrl: \"\"\n    };\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n\n        d3.select(current as SVGElement).data([node]);\n\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({\n            imgUrl: genDeviceImageUrl(node.device)\n        });\n    }\n\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        onMouseOut && onMouseOut(node);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        onMouseOver && onMouseOver(node);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        onDblClick && onDblClick(node);\n    };\n\n\n    onImageError = (): void => {\n        this.setState({\n            imgUrl: \"https://raw.githubusercontent.com/slsys/Gateway/master/devices/png/generic-zigbee-device.png\"\n        });\n    };\n\n    render(): ComponentChild {\n        const { imgUrl } = this.state;\n        const { node, time } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick, onImageError } = this;\n        const deviceType = (node.device as Device).type as string;\n        const cn = cx(style.node, style[deviceType], { [style.offline]: !isOnline(node.device, time) });\n        return (<g class={cn}\n                   ref={this.ref as RefObject<SVGImageElement>}\n                   onMouseOver={onMouseOver}\n                   onMouseOut={onMouseOut}\n                   onDblClick={onDblClick}>\n            {\n                node.device.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                    <image\n                        width={32}\n                        height={32}\n                        onError={onImageError}\n\n                        className={`${style.img}`}\n\n                        href={imgUrl}\n                    />\n                )\n            }\n            <text>{node.name}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    time: TimeInfo;\n    nodes: NodeI[];\n    simulation: d3.Simulation<NodeI, LinkI>;\n}\n\ninterface NodesState {\n    tooltipNode: NodeI | undefined;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    updateDrag(): void {\n        const { simulation } = this.props;\n        const dragForce = d3.drag<SVGCircleElement, NodeI>()\n            .on(\"start\", d => {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", d => {\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            })\n            .on(\"end\", d => {\n                if (!d3.event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n\n\n        d3.selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n    render(): ComponentChild {\n        const { nodes, onMouseOut, onMouseOver, onDblClick, time } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI, index: number) => (\n                    <Node\n                        time={time}\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        onDblClick={onDblClick}\n                        key={index}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import { Device } from \"../../types\";\n\n\nexport const GATEWAY: Device = {\n    nwkAddr: \"coordinator\",\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    friendly_name: \"Coordinator node\",\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    type: \"Coordinator\",\n    ManufName: \"SLS gateway\"\n};\n","import { NodeI } from \"./types\";\nimport style from \"./tooltip.css\";\nimport { FunctionalComponent, h } from \"preact\";\nimport { isOnline } from \"./nodes\";\nimport { Device } from \"../../types\";\nimport { lastSeen } from \"../../utils\";\nimport { TimeInfo } from \"../discovery/types\";\n\ninterface TooltipProps {\n    info: NodeI;\n    time: TimeInfo;\n}\n\nconst getTooltip = (device: Device, timeInfo: TimeInfo): string[] => {\n    const strings: string[] = [];\n    if (device.ManufName) {\n        if (device.ModelId) {\n            strings.push(`${device.ManufName} ${device.ModelId}`);\n        } else {\n            strings.push(device.ManufName);\n        }\n    }\n    if (device.ieeeAddr) {\n        strings.push(device.ieeeAddr);\n    }\n    if (device?.st?.linkquality) {\n        strings.push(`LinkQuality: ${device.st.linkquality}`);\n    }\n    if (strings.length == 0) {\n        strings.push(\"A very strange device...\");\n    }\n    if (device.type !== \"Coordinator\") {\n        if (device.last_seen && timeInfo) {\n            strings.push(`Last seen: ${lastSeen(device, timeInfo)}`);\n        }\n        if (!isOnline(device, timeInfo)) {\n            strings.push(\"Offline\");\n        }\n    }\n    return strings;\n};\n\nconst Tooltip: FunctionalComponent<TooltipProps> = (props: TooltipProps) => {\n    const { info, time } = props;\n    const { device } = info;\n    return (\n        <div className={style.tooltip}>\n            {getTooltip(device, time).map((s) => <div>{s}</div>)}\n        </div>\n\n    );\n};\nexport default Tooltip;","import { BindRule, Device } from \"./types\";\nimport { ApiResponse, callApi, CallbackHandler } from \"./utils\";\nimport { LogLevel } from \"./components/log-viewer\";\nimport { TimeInfo } from \"./components/discovery/types\";\n\nexport const fetchZigbeeDevicesList = (callback: CallbackHandler<Device[]>): Promise<void> => {\n    return callApi(\"/api/zigbee/devices\", \"GET\", {}, undefined, callback);\n};\nexport const fetchTimeInfo = (callback: CallbackHandler<TimeInfo>): Promise<void> => {\n    return callApi(\"/api/time\", \"GET\", {}, undefined, callback);\n};\nexport const startInterview = (dev: string, state: number | \"\", callback: CallbackHandler<void>): Promise<void> => {\n    return callApi(\"/api/zigbee\", \"POST\", { dev, action: \"setInterview\", state }, undefined, callback);\n};\n\nexport const enableJoin = (duration = 255, target = \"\", callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/zigbee/join\", \"GET\", { duration, target }, undefined, callback);\n};\nexport const clearLogsBuffer = (callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/messages-history\", \"POST\", { action: \"clear\" }, undefined, callback);\n};\n\nexport const fetchLogsBuffer = (callback: CallbackHandler<string>): Promise<void> => {\n    return callApi(\"/api/messages-history\", \"GET\", { action: \"getBuffer\" }, undefined, callback, \"text\");\n};\n\nexport const setLogLevel = (logLevel: LogLevel, callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/messages-history\", \"POST\", { action: \"setLevel\", value: logLevel }, undefined, callback);\n};\n\nexport const getCurrentLogLevel = (callback: CallbackHandler<ApiResponse<LogLevel>>): Promise<void> => {\n    return callApi(\"/api/messages-history\", \"GET\", { action: \"getLevel\" }, undefined, callback);\n};\n\nexport const writeFile = (path: string, content: string, callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/files\", \"POST\", { path }, content, callback);\n};\nexport const evalCode = (code: string, callback: CallbackHandler<ApiResponse<string>>): Promise<void> => {\n    return callApi(\"/api/scripts\", \"POST\", { action: \"evalCode\" }, code, callback);\n};\n\nexport const getDeviceInfo = (dev: string, callback: CallbackHandler<Device>): Promise<void> => {\n    return callApi(\"/api/zigbee/devices\", \"GET\", { dev }, undefined, callback);\n};\nexport const setState = (dev: string, name: string, value: unknown, callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/zigbee\", \"POST\", { dev, action: \"setState\", name, value }, undefined, callback);\n};\nexport const setSimpleBind = (dev: string, name: string, value: unknown, callback: CallbackHandler<ApiResponse<void>>): Promise<void> => {\n    return callApi(\"/api/zigbee\", \"POST\", { dev, action: \"setSimpleBind\", name, value }, undefined, callback);\n};\nexport const loadBindsList = (dev: string, callback: CallbackHandler<BindRule[]>): Promise<void> => {\n    return callApi(\"/api/zigbee/bind\", \"GET\", { action: \"list\", dev }, undefined, (err, response: BindRule[]) => {\n        if (err) {\n            callback(true, []);\n        } else {\n            callback(err, response.map((rule, idx) => ({ ...rule, id: idx })));\n        }\n    });\n};\n\n\n\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\n\nimport { GlobalState } from \"./store\";\nimport { Store } from \"unistore\";\nimport {\n    fetchZigbeeDevicesList,\n    getDeviceInfo,\n    loadBindsList,\n    setState,\n    setSimpleBind,\n    startInterview,\n    fetchTimeInfo,\n    enableJoin,\n    fetchLogsBuffer,\n    getCurrentLogLevel,\n    clearLogsBuffer,\n    setLogLevel,\n    evalCode,\n    writeFile,\n} from \"./legacy-actions\";\nimport { BindRule, FileDescriptor, TouchLinkScanApiResponse } from \"./types\";\nimport { LogLevel } from \"./components/log-viewer\";\nimport WebsocketManager from \"./websocket\";\nimport orderBy from \"lodash/orderBy\";\nimport { ApiResponse, callApi } from \"./utils\";\n\nexport interface Actions {\n    setLoading(isLoading: boolean): Promise<void>;\n\n    getDeviceInfo(dev: string): Promise<void>;\n\n    getDeviceBinds(dev: string): Promise<void>;\n\n    getZigbeeDevicesList(showLoading: boolean): Promise<void>;\n\n    removeBind(dev: string, bindRule: BindRule): Promise<void>;\n\n    createBind(dev: string, bindRule: BindRule): Promise<void>;\n\n    setBindRules(bindRules: BindRule[]): Promise<void>;\n\n\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setSimpleBindValue(dev: string, name: string, value: unknown): Promise<void>;\n\n    startInterview(dev: string, state: number | \"\"): Promise<void>;\n\n    fetchTimeInfo(): Promise<void>;\n\n    setJoinDuration(duration: number, target: string): Promise<void>;\n    fetchLogsBuffer(): Promise<void>;\n    getCurrentLogLevel(): Promise<void>;\n    clearLogs(): Promise<void>;\n    clearLogsBuffer(): Promise<void>;\n    setLogLevel(level: LogLevel): Promise<void>;\n\n    setCurrentFileContent(content: string): Promise<void>;\n\n    evalCode(code: string): Promise<void>;\n    writeFile(fileName: string, content: string): Promise<void>;\n\n    clearExecutionResults(): Promise<void>;\n\n    getFilesList(path: string): Promise<void>;\n\n    readFile(file: FileDescriptor): Promise<void>;\n    deleteFile(file: FileDescriptor): Promise<void>;\n\n    renameDevice(old: string, newName: string): Promise<void>;\n    removeDevice(dev: string, force: boolean): Promise<void>;\n    refreshState(dev: string, name: string): Promise<void>;\n\n    touchlinkScan(): Promise<void>;\n    touchlinkList(): Promise<void>;\n    touchlinkIdentify(dev: string): Promise<void>;\n    touchlinkRest(dev: string): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    setLoading(state, isLoading: boolean): void {\n        store.setState({ isLoading });\n    },\n    getDeviceInfo: async (state, dev: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        await getDeviceInfo(dev, (err, device) => {\n            store.setState({\n                isError: err,\n                isLoading: false,\n                device\n            });\n        });\n    },\n\n    setBindRules(state, bindRules: BindRule[]): void {\n        store.setState({ bindRules });\n    },\n    getDeviceBinds: async (state, dev: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        await loadBindsList(dev, (err, bindRules: []) => {\n            store.setState({\n                isError: err,\n                isLoading: false,\n                bindRules: [{} as BindRule, ...bindRules]\n            });\n        })\n    },\n    getZigbeeDevicesList: (state, showLoading = true): Promise<void> => {\n        showLoading && store.setState({ isLoading: true });\n        return fetchZigbeeDevicesList((err, devices) => {\n            store.setState({\n                isError: err,\n                isLoading: false,\n                devices\n            });\n        });\n    },\n\n    removeBind: (state, dev: string, bindRule: BindRule): Promise<void> => {\n        store.setState({ isLoading: true });\n        return callApi(\"/api/zigbee/bind\", \"POST\", { action: \"unbind\", dev, ...bindRule }, undefined, (err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false\n            });\n        })\n    },\n    createBind: (state, dev: string, bindRule: BindRule): Promise<void> => {\n        store.setState({ isLoading: true });\n        return callApi(\"/api/zigbee/bind\", \"POST\", { action: \"bind\", dev, ...bindRule }, undefined, (err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false\n            });\n        });\n    },\n\n\n    setStateValue(state, dev: string, name: string, value: unknown): Promise<void> {\n        store.setState({ isLoading: true });\n        return setState(dev, name, value, (err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false\n            });\n        });\n    },\n    setSimpleBindValue(state, dev: string, name: string, value: unknown): Promise<void> {\n        store.setState({ isLoading: true });\n        return setSimpleBind(dev, name, value, (err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false\n            });\n        });\n    },\n    startInterview(state, dev: string, currentInterviewState: number | \"\"): Promise<void> {\n        store.setState({ isLoading: true });\n        return startInterview(dev, currentInterviewState, (err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false\n            });\n        });\n    },\n    fetchTimeInfo(state): Promise<void> {\n        return fetchTimeInfo((err, time) => {\n            store.setState({ time });\n        });\n    },\n\n    setJoinDuration(state, duration = 255, target = \"\"): Promise<void> {\n        store.setState({ isLoading: true });\n        return enableJoin(duration, target, (err, time) => {\n            store.setState({ isLoading: false });\n        });\n    },\n    async fetchLogsBuffer(state): Promise<void> {\n        store.setState({ isLoading: true });\n        await fetchLogsBuffer((err, logs) => {\n            store.setState({\n                isError: err,\n                isLoading: false,\n                logs: logs.split(\"\\n\")\n            });\n        });\n    },\n    getCurrentLogLevel(state): Promise<void> {\n        store.setState({ isLoading: true });\n        return getCurrentLogLevel((err, response) => {\n            store.setState({\n                isError: err,\n                isLoading: false,\n                logLevel: response.result\n            });\n        });\n    },\n    clearLogs(state): void {\n        store.setState({ logs: [] });\n    },\n    clearLogsBuffer(state): Promise<void> {\n        store.setState({ isLoading: true });\n        return clearLogsBuffer((err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    setLogLevel(state, level: LogLevel): Promise<void> {\n        store.setState({ isLoading: true });\n        return setLogLevel(level, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    setCurrentFileContent(state, currentFileContent: string): void {\n        store.setState({ currentFileContent });\n    },\n    evalCode(state, code): Promise<void> {\n        store.setState({ isLoading: true });\n        return evalCode(code, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err,\n                executionResults: res\n            });\n        });\n    },\n    clearExecutionResults(state): void {\n        store.setState({ executionResults: null });\n    },\n    writeFile(state, path, content): Promise<void> {\n        store.setState({ isLoading: true });\n        return writeFile(path, content, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    async getFilesList(state, path: string): Promise<void> {\n        store.setState({ isLoading: true });\n        await callApi<ApiResponse<FileDescriptor[]>>(\"/api/files\", \"GET\", { path }, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err,\n                files: orderBy(res.result, [\"name\"])\n            });\n        })\n    },\n\n    async readFile(state, file: FileDescriptor): Promise<void> {\n        store.setState({ isLoading: true });\n        await callApi<string>(\"/api/files\", \"GET\", { path: file.name }, undefined, (err, response) => {\n            store.setState({\n                isLoading: false,\n                isError: err,\n                currentFileContent: response,\n                currentFile: file\n            });\n        }, \"text\");\n    },\n\n    deleteFile(state, file: FileDescriptor): Promise<void> {\n        store.setState({ isLoading: true });\n        return callApi<void>(\"/api/files\", \"DELETE\", { path: file.name }, undefined, (err, response) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    renameDevice: (state, old: string, newName: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        return callApi<ApiResponse<void>>(\"/api/zigbee/rename\", \"GET\", { old, new: newName }, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    removeDevice: (state, dev: string, force: boolean): Promise<void> => {\n        store.setState({ isLoading: true });\n        const params = { dev };\n        if (force) {\n            params['force'] = 1;\n        }\n        return callApi<ApiResponse<void>>(\"/api/zigbee/remove\", \"DELETE\", params, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n\n\n    refreshState: (state, dev: string, name: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        const params = {\n            dev, name,\n            action: 'getState'\n        }\n        return callApi<ApiResponse<void>>(\"/api/zigbee\", \"GET\", params, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n\n    touchlinkScan: (state): Promise<void> => {\n        store.setState({ isLoading: true, touchlinkResuts: null });\n        const params = {\n            action: 'scan'\n        };\n        return callApi<ApiResponse<void>>(\"/api/zigbee/touchlink\", \"GET\", params, undefined, (err, res) => {\n            store.setState({\n                touchlinkScanInProgress: true,\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n\n    touchlinkList: (state): Promise<void> => {\n        store.setState({ isLoading: true });\n        const params = {\n            action: 'list'\n        };\n        return callApi<ApiResponse<TouchLinkScanApiResponse>>(\"/api/zigbee/touchlink\", \"GET\", params, undefined, (err, { result }) => {\n            store.setState({\n                isLoading: false,\n                isError: err,\n                touchlinkScanInProgress: result.currentChannel !== 0,\n                touchlinkResuts: result\n            });\n        });\n    },\n\n    touchlinkIdentify: (state, dev: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        const params = {\n            action: 'identify',\n            dev\n        };\n        return callApi<ApiResponse<TouchLinkScanApiResponse>>(\"/api/zigbee/touchlink\", \"GET\", params, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    },\n    touchlinkRest: (state, dev: string): Promise<void> => {\n        store.setState({ isLoading: true });\n        const params = {\n            action: 'reset',\n            dev\n        };\n        return callApi<ApiResponse<TouchLinkScanApiResponse>>(\"/api/zigbee/touchlink\", \"GET\", params, undefined, (err, res) => {\n            store.setState({\n                isLoading: false,\n                isError: err\n            });\n        });\n    }\n});\nexport default actions;\n","import { Component, ComponentChild, createRef, h } from \"preact\";\nimport Links from \"./links\";\nimport Nodes from \"./nodes\";\nimport * as d3 from \"d3\";\nimport style from \"./map.css\";\nimport { GraphI, LinkI, NodeI } from \"./types\";\nimport { convert2graph } from \"./convert\";\nimport Tooltip from \"./tooltip\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\n\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI) => void;\n    onMouseOut?: (arg0: NodeI) => void;\n    onDblClick?: (arg0: NodeI) => void;\n}\n\ninterface MapState {\n    graph: GraphI;\n    tooltipNode: NodeI | false;\n    width: number;\n    height: number;\n}\n\nconst getDistance = (d: LinkI): number => {\n    switch (d.type) {\n        case \"Router2Router\":\n        case \"Router2Coordinator\":\n            return 300;\n        case \"EndDevice2Coordinator\":\n        case \"EndDevice2Router\":\n            return 150;\n        default:\n            return 200;\n    }\n};\n\nexport class Map extends Component<GlobalState & Actions, MapState> {\n    ref = createRef<HTMLDivElement>();\n    simulation!: d3.Simulation<NodeI, LinkI>;\n\n    constructor() {\n        super();\n\n\n        this.simulation = d3.forceSimulation<NodeI>();\n\n        this.state = {\n            width: 0,\n            height: 0,\n            graph: {\n                nodes: [],\n                links: []\n            },\n            tooltipNode: false\n        };\n    }\n\n    updateNodes(): void {\n        this.updateForces();\n        const node = d3.selectAll<SVGGeometryElement, NodeI>(\n            `.${style.node}`\n        );\n        const link = d3.selectAll<SVGLineElement, LinkI>(\n            `.${style.link}`\n        );\n        const linkLabel = d3.selectAll<SVGLineElement, LinkI>(\n            `.${style.linkLabel}`\n        );\n        const ticked = (): void => {\n            const radius = 40;\n            const { width, height } = this.state;\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            link.attr(\"d\", (d: LinkI): string => `M ${Math.max(radius, Math.min(width - radius, d.source.x))} ${Math.max(radius, Math.min(height - radius, d.source.y))} L ${Math.max(radius, Math.min(width - radius, d.target.x))} ${Math.max(radius, Math.min(height - radius, d.target.y))}`);\n\n            linkLabel.attr(\"transform\", function(d) {\n                //TODO: add type guard\n                if (((d.target as NodeI).x as number) < ((d.source as NodeI).x as number)) {\n                    const bbox = this.getBBox();\n                    const rx = bbox.x + bbox.width / 2;\n                    const ry = bbox.y + bbox.height / 2;\n                    return `rotate(180 ${rx} ${ry})`;\n                }\n                return \"rotate(0)\";\n            });\n            const imgXShift = 32 / 2;\n            const imgYShift = 32 / 2;\n            node.attr(\"transform\", d => `translate(${Math.max(radius, Math.min(width - radius, d.x)) - imgXShift}, ${Math.max(radius, Math.min(height - radius, d.y)) - imgYShift})`);\n        };\n        const { graph } = this.state;\n        this.simulation.nodes(graph.nodes).on(\"tick\", ticked);\n        const linkForce = this.simulation.force(\"link\") as d3.ForceLink<NodeI,\n            LinkI>;\n        linkForce.links(graph.links);\n        this.simulation.restart();\n    }\n\n    setTooltip = (tooltipNode: NodeI): void => {\n        this.setState({ tooltipNode });\n    };\n\n    removeTooltip = (): void => {\n        this.setState({ tooltipNode: false });\n    };\n\n    openDetailsWindow = (node: NodeI): void => {\n        switch (node.device.type) {\n            case \"EndDevice\":\n            case \"Router\":\n                window.open(genDeviceDetailsLink(node.id));\n                break;\n            default:\n                break;\n        }\n    };\n\n    updateForces(): void {\n        const { width, height } = this.state;\n\n        const linkForce = d3.forceLink<NodeI, LinkI>()\n            .id(d => d.id)\n            .distance(getDistance)\n            .strength(0.2);\n\n        const chargeForce = d3.forceManyBody()\n            .distanceMin(200)\n            .distanceMax(1000)\n            .strength(-200);\n\n        const repelForce = d3.forceManyBody()\n            .strength(-140)\n            .distanceMax(50)\n            .distanceMin(10);\n\n        const collisionForce = d3.forceCollide(40)\n            .strength(1)\n            .iterations(100);\n\n        const centerForce = d3.forceCenter(width / 2, height / 2);\n\n        this.simulation\n            .force(\"link\", linkForce)\n            .force(\"charge\", chargeForce)\n            .force(\"collisionForce\", collisionForce)\n            .force(\"repelForce\", repelForce)\n            .force(\"center\", centerForce);\n    }\n\n    async initPage(): Promise<void> {\n        const { getZigbeeDevicesList } = this.props;\n        await getZigbeeDevicesList(true);\n        const { devices } = this.props;\n        const graph = convert2graph(devices);\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ graph, width, height }, this.updateNodes);\n    }\n\n    async componentDidMount(): Promise<void> {\n        await this.initPage()\n    }\n\n    render(): ComponentChild {\n        const { width, height, graph, tooltipNode } = this.state;\n        const { time } = this.props;\n        const { setTooltip, removeTooltip, openDetailsWindow } = this;\n        return (\n            <div className={style.container} ref={this.ref}>\n                <svg viewBox={`0 0 ${width} ${height}`}>\n                    <Links links={graph.links} />\n                    <Nodes\n                        nodes={graph.nodes}\n                        simulation={this.simulation}\n                        onMouseOver={setTooltip}\n                        onMouseOut={removeTooltip}\n                        onDblClick={openDetailsWindow}\n                        time={time}\n                    />\n                    {tooltipNode ? (\n                        <foreignObject\n                            className={style.foreignObject}\n                            x={tooltipNode.x as number + 10}\n                            y={tooltipNode.y as number + 5}\n                        >\n                            <Tooltip info={tooltipNode} time={time} />\n                        </foreignObject>\n                    ) : null}\n                </svg>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"time\", \"devices\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, Actions>(mappedProps, actions)(Map);\nexport default ConnectedMap;\n","import { GATEWAY } from \"./consts\";\nimport { GraphI, LinkType, NodeI } from \"./types\";\nimport { Device, DeviceType } from \"../../types\";\n\nconst getName = (device: Device): string => {\n    const { friendly_name: friendlyName, nwkAddr } = device;\n    if (friendlyName && friendlyName !== \"null\") {\n        return friendlyName;\n    }\n    return nwkAddr;\n};\nexport const convert2graph = (devices: Device[]): GraphI => {\n    const coordinator: NodeI = {\n        id: GATEWAY.nwkAddr,\n        device: GATEWAY,\n        name: \"GW\"\n    };\n\n    const graph: GraphI = {\n        nodes: [coordinator],\n        links: []\n    };\n    const getLinkType = (source: DeviceType, dest: DeviceType): LinkType => `${source}2${dest}` as LinkType;\n\n    devices.forEach((deviceData) => {\n        graph.nodes.push({\n            id: deviceData.nwkAddr,\n            name: getName(deviceData),\n            device: deviceData\n        });\n        if (Array.isArray(deviceData.Rtg) && deviceData.Rtg.length) {\n            deviceData.Rtg.forEach(route => {\n                const destination = devices.find(d => d.nwkAddr == route.toString()) || GATEWAY;\n                graph.links.push({\n                    source: deviceData.nwkAddr,\n                    target: destination.nwkAddr,\n                    linkQuality: deviceData?.st?.linkquality,\n                    type: getLinkType(deviceData.type, destination.type)\n                });\n            });\n        } else {\n            graph.links.push({\n                source: deviceData.nwkAddr,\n                target: coordinator.id,\n                linkQuality: deviceData?.st?.linkquality,\n                type: getLinkType(deviceData.type, \"Coordinator\")\n            });\n        }\n    });\n    return graph;\n};\n","import { Component, ComponentChild, h } from \"preact\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    className?: string;\n\n    onClick?(arg1: T): void;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T>, {}> {\n    onClick = (): void => {\n        const { item, onClick } = this.props;\n        onClick && onClick(item);\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        return <button {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}\n\n\nexport class Link<T> extends Component<ButtonProps<T>, {}> {\n    onClick = (): void => {\n        const { item, onClick } = this.props;\n        onClick && onClick(item);\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        return <a href=\"#\" {...rest} onClick={this.onClick}>{children}</a>;\n    }\n}","import { Component, ComponentChild, h, Fragment } from \"preact\";\nimport Button from \"../button\";\nimport { Device } from \"../../types\";\nimport { connect } from \"unistore/preact\";\nimport actions, { Actions } from \"../../actions\";\nimport cx from \"classnames\";\ninterface DeviceControlGroupProps {\n    device: Device;\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & Actions, {}> {\n    onBindClick = (): void => {\n        const { device } = this.props;\n        location.href = `/zigbee/device?dev=${encodeURIComponent(device.nwkAddr)}&activeTab=Bind`;\n    };\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, getZigbeeDevicesList, getDeviceInfo, device } = this.props;\n        const newName = prompt(\"Enter new name\", device.friendly_name);\n        if (newName !== null && newName !== device.friendly_name) {\n            await renameDevice(device.nwkAddr, newName);\n            await getZigbeeDevicesList(true);\n            await getDeviceInfo(device.nwkAddr);\n        }\n    };\n\n\n    onRemoveClick = async (force = false): Promise<void> => {\n        const { removeDevice, getZigbeeDevicesList, device } = this.props;\n        const message = force ? \"Remove device?\" : \"Send leave request?\";\n        if (confirm(message)) {\n            await removeDevice(device.nwkAddr, force);\n            await getZigbeeDevicesList(true);\n        }\n    };\n\n    render(): ComponentChild {\n        const { device } = this.props;\n        const validDevice = !!device.ieeeAddr;\n\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                <Button<void> className=\"btn btn-secondary\" onClick={this.onRenameClick}><i\n                    className=\"fa fa-edit\" /></Button>\n                <Button<void> className=\"btn btn-success\" onClick={this.onBindClick}>Bind</Button>\n                {\n                    <Fragment>\n                        <button type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className={cx(\"fa\", \"fa-trash\")} /></button>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n                            {validDevice ? <a class=\"dropdown-item\" href=\"#\" onClick={(): Promise<void> => this.onRemoveClick(false)}>Send leave req</a> : null}\n                            <a class=\"dropdown-item\" href=\"#\" onClick={(): Promise<void> => this.onRemoveClick(true)}>Remove</a>\n                        </div>\n                    </Fragment>\n                }\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, {}, Actions>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","export enum ZigbeeClusters {\n    // General Clusters\n    ZCL_CLUSTER_ID_GEN_BASIC=                             0x0000,\n    ZCL_CLUSTER_ID_GEN_POWER_CFG=                         0x0001,\n    ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG=                0x0002,\n    ZCL_CLUSTER_ID_GEN_IDENTIFY=                          0x0003,\n    ZCL_CLUSTER_ID_GEN_GROUPS=                            0x0004,\n    ZCL_CLUSTER_ID_GEN_SCENES=                            0x0005,\n    ZCL_CLUSTER_ID_GEN_ON_OFF=                            0x0006,\n    ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG=              0x0007,\n    ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL=                     0x0008,\n    ZCL_CLUSTER_ID_GEN_ALARMS=                            0x0009,\n    ZCL_CLUSTER_ID_GEN_TIME=                              0x000A,\n    ZCL_CLUSTER_ID_GEN_LOCATION=                          0x000B,\n    ZCL_CLUSTER_ID_GEN_ANALOG_INPUT_BASIC=                0x000C,\n    ZCL_CLUSTER_ID_GEN_ANALOG_OUTPUT_BASIC=               0x000D,\n    ZCL_CLUSTER_ID_GEN_ANALOG_VALUE_BASIC=                0x000E,\n    ZCL_CLUSTER_ID_GEN_BINARY_INPUT_BASIC=                0x000F,\n    ZCL_CLUSTER_ID_GEN_BINARY_OUTPUT_BASIC=               0x0010,\n    ZCL_CLUSTER_ID_GEN_BINARY_VALUE_BASIC=                0x0011,\n    ZCL_CLUSTER_ID_GEN_MULTISTATE_INPUT_BASIC=            0x0012,\n    ZCL_CLUSTER_ID_GEN_MULTISTATE_OUTPUT_BASIC=           0x0013,\n    ZCL_CLUSTER_ID_GEN_MULTISTATE_VALUE_BASIC=            0x0014,\n    ZCL_CLUSTER_ID_GEN_COMMISSIONING=                     0x0015,\n    ZCL_CLUSTER_ID_GEN_PARTITION=                         0x0016,\n\n    ZCL_CLUSTER_ID_OTA=                                   0x0019,\n\n    ZCL_CLUSTER_ID_GEN_POWER_PROFILE=                     0x001A,\n    ZCL_CLUSTER_ID_GEN_APPLIANCE_CONTROL=                 0x001B,\n\n    ZCL_CLUSTER_ID_GEN_POLL_CONTROL=                      0x0020,\n\n    ZCL_CLUSTER_ID_GREEN_POWER_PROXY=                     0x0021,\n\n// Closures Clusters,\n    ZCL_CLUSTER_ID_CLOSURES_SHADE_CONFIG=                 0x0100,\n    ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK=                    0x0101,\n    ZCL_CLUSTER_ID_CLOSURES_WINDOW_COVERING=              0x0102,\n\n// HVAC Clusters,\n    ZCL_CLUSTER_ID_HVAC_PUMP_CONFIG_CONTROL=              0x0200,\n    ZCL_CLUSTER_ID_HVAC_THERMOSTAT=                       0x0201,\n    ZCL_CLUSTER_ID_HVAC_FAN_CONTROL=                      0x0202,\n    ZCL_CLUSTER_ID_HVAC_DIHUMIDIFICATION_CONTROL=         0x0203,\n    ZCL_CLUSTER_ID_HVAC_USER_INTERFACE_CONFIG=            0x0204,\n\n// Lighting Clusters,\n    ZCL_CLUSTER_ID_LIGHTING_COLOR_CONTROL=                0x0300,\n    ZCL_CLUSTER_ID_LIGHTING_BALLAST_CONFIG=               0x0301,\n\n// Measurement and Sensing Clusters,\n    ZCL_CLUSTER_ID_MS_ILLUMINANCE_MEASUREMENT=            0x0400,\n    ZCL_CLUSTER_ID_MS_ILLUMINANCE_LEVEL_SENSING_CONFIG=   0x0401,\n    ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT=            0x0402,\n    ZCL_CLUSTER_ID_MS_PRESSURE_MEASUREMENT=               0x0403,\n    ZCL_CLUSTER_ID_MS_FLOW_MEASUREMENT=                   0x0404,\n    ZCL_CLUSTER_ID_MS_RELATIVE_HUMIDITY=                  0x0405,\n    ZCL_CLUSTER_ID_MS_OCCUPANCY_SENSING=                  0x0406,\n\n// Security and Safety (SS) Clusters,\n    ZCL_CLUSTER_ID_SS_IAS_ZONE=                           0x0500,\n    ZCL_CLUSTER_ID_SS_IAS_ACE=                            0x0501,\n    ZCL_CLUSTER_ID_SS_IAS_WD=                             0x0502,\n// Protocol Interfaces,\n    ZCL_CLUSTER_ID_PI_GENERIC_TUNNEL=                     0x0600,\n    ZCL_CLUSTER_ID_PI_BACNET_PROTOCOL_TUNNEL=             0x0601,\n    ZCL_CLUSTER_ID_PI_ANALOG_INPUT_BACNET_REG=            0x0602,\n    ZCL_CLUSTER_ID_PI_ANALOG_INPUT_BACNET_EXT=            0x0603,\n    ZCL_CLUSTER_ID_PI_ANALOG_OUTPUT_BACNET_REG=           0x0604,\n    ZCL_CLUSTER_ID_PI_ANALOG_OUTPUT_BACNET_EXT=           0x0605,\n    ZCL_CLUSTER_ID_PI_ANALOG_VALUE_BACNET_REG=            0x0606,\n    ZCL_CLUSTER_ID_PI_ANALOG_VALUE_BACNET_EXT=            0x0607,\n    ZCL_CLUSTER_ID_PI_BINARY_INPUT_BACNET_REG=            0x0608,\n    ZCL_CLUSTER_ID_PI_BINARY_INPUT_BACNET_EXT=            0x0609,\n    ZCL_CLUSTER_ID_PI_BINARY_OUTPUT_BACNET_REG=           0x060A,\n    ZCL_CLUSTER_ID_PI_BINARY_OUTPUT_BACNET_EXT=           0x060B,\n    ZCL_CLUSTER_ID_PI_BINARY_VALUE_BACNET_REG=            0x060C,\n    ZCL_CLUSTER_ID_PI_BINARY_VALUE_BACNET_EXT=            0x060D,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_INPUT_BACNET_REG=        0x060E,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_INPUT_BACNET_EXT=        0x060F,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_OUTPUT_BACNET_REG=       0x0610,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_OUTPUT_BACNET_EXT=       0x0611,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_VALUE_BACNET_REG=        0x0612,\n    ZCL_CLUSTER_ID_PI_MULTISTATE_VALUE_BACNET_EXT=        0x0613,\n    ZCL_CLUSTER_ID_PI_11073_PROTOCOL_TUNNEL =      0x0614,\n\n// Advanced Metering Initiative (SE) Clusters,\n    ZCL_CLUSTER_ID_SE_PRICING=                            0x0700,\n    ZCL_CLUSTER_ID_SE_LOAD_CONTROL=                       0x0701,\n    ZCL_CLUSTER_ID_SE_SIMPLE_METERING=                    0x0702,\n    ZCL_CLUSTER_ID_SE_MESSAGE=                            0x0703,\n    ZCL_CLUSTER_ID_SE_SE_TUNNELING=                       0x0704,\n    ZCL_CLUSTER_ID_SE_PREPAYMENT=                         0x0705,\n    ZCL_CLUSTER_ID_SE_ENERGY_MGMT=                        0x0706,\n    ZCL_CLUSTER_ID_SE_TOU_CALENDAR=                       0x0707,\n    ZCL_CLUSTER_ID_SE_DEVICE_MGMT=                        0x0708,\n    ZCL_CLUSTER_ID_SE_EVENTS=                             0x0709,\n    ZCL_CLUSTER_ID_SE_MDU_PAIRING=                        0x070A,\n\n    ZCL_CLUSTER_ID_GEN_KEY_ESTABLISHMENT=                 0x0800,\n\n    ZCL_CLUSTER_ID_HA_APPLIANCE_IDENTIFICATION=           0x0B00,\n    ZCL_CLUSTER_ID_HA_METER_IDENTIFICATION=               0x0B01,\n    ZCL_CLUSTER_ID_HA_APPLIANCE_EVENTS_ALERTS=            0x0B02,\n    ZCL_CLUSTER_ID_HA_APPLIANCE_STATISTICS=               0x0B03,\n    ZCL_CLUSTER_ID_HA_ELECTRICAL_MEASUREMENT=             0x0B04,\n    ZCL_CLUSTER_ID_HA_DIAGNOSTIC=                         0x0B05,\n\n    // Light Link cluster\n    ZCL_CLUSTER_ID_TOUCHLINK=                           0x1000\n}\n","import { Component, ComponentChild, h } from \"preact\";\n\ninterface SafeImgState {\n    isOk: boolean;\n}\n\ninterface SafeImgProps {\n    [k: string]: any;\n}\n\nexport default class SafeImg extends Component<SafeImgProps, SafeImgState> {\n    constructor() {\n        super();\n        this.state = {\n            isOk: true\n        };\n    }\n\n    onError = (): void => {\n        this.setState({\n            isOk: false\n        });\n\n    };\n\n    render(): ComponentChild {\n        const { children, ...rest } = this.props;\n        const { isOk } = this.state;\n        return isOk ? <img {...rest} onError={this.onError} /> : children;\n    }\n}","import { Fragment, FunctionalComponent, h } from \"preact\";\nimport { PowerSource } from \"../../types\";\nimport style from \"./style.css\";\nimport { bitOps } from \"../../utils\";\n\ninterface PowerSourceProps {\n    source: PowerSource;\n    battery?: number;\n    className?: string;\n}\nconst description = [\n    \"Unknown\",\n    \"Mains (single phase)\",\n    \"Mains (3 phase)\",\n    \"Battery\",\n    \"DC source\",\n    \"Emergency mains constantly powered\",\n    \"Emergency mains and transfer switch\"\n];\n\nconst PowerSourceComp: FunctionalComponent<PowerSourceProps> = ({ source, battery,className }) => {\n    let batteryClass = \"fa-battery-full\";\n    //Bit b7 of this attribute SHALL be set to 1 if the device has a secondary power source in the form of a battery\n    // backup. Otherwise, bit b7 SHALL be set to 0.\n    const hasSecondaryPowerSource = bitOps.getBit(source, 7) == 1;\n    if (hasSecondaryPowerSource) {\n        source = bitOps.clearBit(source, 7);\n    }\n\n    switch (source) {\n        case PowerSource.Battery:\n            if (battery) {\n                if (battery > 75) {\n                    batteryClass = \"fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass = \"fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass = \"fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass = \"fa-battery-quarter\";\n                } else {\n                    batteryClass =\"fa-battery-empty\"\n                }\n            }\n            return <i className={`fa ${batteryClass} ${className}`}\n                      title={`${description[source]} ${battery ? `, power level ${battery}%` : \"\"} `} />;\n\n        case PowerSource.EmergencyMains:\n        case PowerSource.MainsThreePhase:\n        case PowerSource.EmergencyMainsConstantPower:\n        case PowerSource.MainsSinglePhase:\n            return (<Fragment>\n                <i className={`fa fa-plug ${style.plug} ${className}`} title={description[source]} />\n                {hasSecondaryPowerSource ? <PowerSourceComp className={'d-block'} source={PowerSource.Battery} battery={battery} /> : null }\n            </Fragment>);\n        case PowerSource.DC:\n            return (<Fragment>\n                <i class={`fa fa-charging-station ${className}`} title={description[source]} />\n                {hasSecondaryPowerSource ? <PowerSourceComp className={'d-block'} source={PowerSource.Battery} battery={battery} /> : null }\n            </Fragment>);\n\n        case PowerSource.Unknown:\n        default:\n            return <i className={`fa fa-question ${className}`} title={description[0]} />;\n    }\n};\n\nexport default PowerSourceComp;\n","import { Component, ComponentChild, h } from \"preact\";\nimport style from \"./style.css\";\nimport { SortDirection } from \"../../types\";\n\n\n\ninterface ActionTHProps<T> {\n    column: T;\n    current: T;\n    currentDirection: SortDirection;\n\n    onClick?(arg1: unknown): void;\n\n    [k: string]: unknown;\n}\n\nexport default class ActionTH<T> extends Component<ActionTHProps<T>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow(): ComponentChild {\n        const { currentDirection, current, column } = this.props;\n        if (current === column) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            } else  {\n                return <i className={`fa fa-sort-amount-down`} />;\n            }\n\n        }\n        return <i className={`fa fa-sort-amount-down ${style.invisible}`} />;\n\n    }\n\n    render(): ComponentChild {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, ...rest } = this.props;\n        return <th {...rest}>\n            <a href=\"#\" onClick={this.onClick}>{children}</a>\n            {this.renderArrow()}\n        </th>;\n    }\n}","import style from \"./style.css\";\nimport { Component, ComponentChild, h } from \"preact\";\nimport Button from \"../button\";\nimport orderBy from \"lodash/orderBy\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport { Device, DeviceSupportStatus, inteviewsCount, SortDirection } from \"../../types\";\nimport { genDeviceDetailsLink, genDeviceImageUrl, lastSeen } from \"../../utils\";\nimport SafeImg from \"../safe-image\";\nimport { Notyf } from \"notyf\";\nimport PowerSource from \"../power-source\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\nimport ActionTH from \"./ActionTH\";\nimport { isLeaveReqSend } from \"../../binaryUtils\";\n\n//TODO: proper type alias\ntype SortColumns =\n    \"last_seen\"\n    | \"nwkAddr\"\n    | \"friendly_name\"\n    | \"ieeeAddr\"\n    | \"ManufName\"\n    | \"st.linkquality\"\n    | \"ModelId\"\n    | \"Interview.State\"\n    | \"PowerSource\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumns;\n    currentTime: number;\n}\n\n\n\n\nconst storeKey = \"ZigbeeTableState\";\n\nexport class ZigbeeTable extends Component<Actions & GlobalState, ZigbeeTableState> {\n    constructor() {\n        super();\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"last_seen\",\n            currentTime: Date.now()\n        };\n    }\n\n    restoreState(): void {\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Partial<ZigbeeTableState> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n\n    loadData = (showLoading = true): void => {\n        const {getZigbeeDevicesList, fetchTimeInfo} = this.props;\n        getZigbeeDevicesList(showLoading);\n        fetchTimeInfo();\n        setInterval(fetchTimeInfo, 5000);\n    };\n\n\n    componentDidMount(): void {\n        this.restoreState();\n        this.loadData();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onInterviewClick = async (device: Device): Promise<void> => {\n        const { startInterview } = this.props;\n        if (confirm(\"Start Interview?\")) {\n            await startInterview(device.nwkAddr, device?.Interview?.State)\n            new Notyf().success(\"Started interview\");\n        }\n    };\n\n    onSortChange = (column: SortColumns, sortDir: SortDirection | undefined = undefined): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (sortColumn === column) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    render(): ComponentChild {\n        const { devices, isLoading } = this.props;\n        if (isLoading) {\n            return <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>;\n        }\n        return (devices.length ? this.renderDevicesTable() : <div>No data</div>);\n    }\n\n    renderInterviewState(device: Device): ComponentChild {\n        const { onInterviewClick } = this;\n        const interviewTrigger = <Button<Device> className=\"btn btn-normal btn-sm\" onClick={onInterviewClick}\n                                                 item={device}><i className=\"fa fa-play\" /></Button>;\n\n        if (device.Interview) {\n            if (inteviewsCount === device.Interview.State) {\n                return \"Ok\";\n            }\n            return <div>{device.Interview.State ?? 0}/{inteviewsCount} {interviewTrigger}</div>;\n        }\n        return <div>N/A {interviewTrigger}</div>;\n    }\n\n    getSupportTitle(device: Device): string {\n        switch (device.supported) {\n            case DeviceSupportStatus.Supported:\n                return \"Supported\";\n            case DeviceSupportStatus.Unknown:\n                return \"Support unknown\";\n            case DeviceSupportStatus.UnSupported:\n                return \"Unsupported\";\n            default:\n                return \"\";\n        }\n    }\n\n    renderDevicesTable(): ComponentChild {\n        const { sortColumn, sortDirection } = this.state;\n        const { time, devices } = this.props;\n        const sortedDevices = orderBy<Device>(devices, [sortColumn], [sortDirection]);\n        const { onSortChange } = this;\n\n        return (\n            <table className={`table table-striped table-borderless ${style.adaptive} ${style.zigbee}`}>\n                <thead>\n                <tr className=\"text-nowrap\">\n                    <th>#</th>\n                    <th>Pic</th>\n                    <ActionTH<SortColumns> className={cx(style[\"nwk-addr\"], style[\"action-column\"])} column=\"nwkAddr\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>nwkAddr</ActionTH>\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"friendly_name\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>FriendlyName</ActionTH>\n                    <ActionTH<SortColumns> className={cx(style[\"ieee-addr\"], style[\"action-column\"])} column=\"ieeeAddr\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>ieeeAddr</ActionTH>\n                    <ActionTH<SortColumns> className={cx(style[\"manu-name\"], style[\"action-column\"])} column=\"ManufName\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange} titile=\"ManufName\">Manuf</ActionTH>\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"ModelId\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>ModelId</ActionTH>\n\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"st.linkquality\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange} title=\"Link quality\">Link</ActionTH>\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"Interview.State\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>Interview</ActionTH>\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"last_seen\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>LastSeen</ActionTH>\n                    <th>Routes</th>\n                    <ActionTH<SortColumns> className={style[\"action-column\"]} column=\"PowerSource\"\n                                           currentDirection={sortDirection} current={sortColumn}\n                                           onClick={onSortChange}>PS</ActionTH>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {sortedDevices.map((device: Device, index) => <tr className={cx({\n                    \"table-danger\": !device.ieeeAddr,\n                    \"table-warning\": isLeaveReqSend(device.flags)\n                })}>\n                    <td className=\"font-weight-bold\">{index + 1}</td>\n                    <td className={style[\"device-pic\"]}><SafeImg class={cx(style[\"device-image\"])}\n                                                                 src={genDeviceImageUrl(device)} />\n                    </td>\n                    <td className={style[\"nwk-addr\"]}><a\n                        href={genDeviceDetailsLink(device.nwkAddr)}>{device.nwkAddr}</a>\n                    </td>\n                    <td>{device.friendly_name}</td>\n                    <td className={style[\"ieee-addr\"]}>{device.ieeeAddr ? device.ieeeAddr : \"<corrupted>\"}</td>\n                    <td title={device.ManufName}\n                        className={cx(style[\"manu-name\"], \"text-truncate\", \"text-nowrap\", \"position-relative\")}>{device.ManufName}</td>\n                    <td title={this.getSupportTitle(device)} className={cx(\"text-nowrap\", {\n                        \"table-danger\": device.supported == DeviceSupportStatus.UnSupported,\n                        \"table-warning\": device.supported == DeviceSupportStatus.Unknown\n                    })}>{device.ModelId}</td>\n                    <td>{device.st?.linkquality}</td>\n                    <td className={cx({\n                        \"table-warning\": device.Interview?.State !== 4\n                    })}>{this.renderInterviewState(device)}</td>\n                    <td>{lastSeen(device, time)}</td>\n                    <td>{device?.Rtg?.map((route) => <a className={\"d-block\"}\n                        href={genDeviceDetailsLink(route)}>{route}</a>)}</td>\n                    <td className=\"text-left\"><PowerSource source={device.PowerSource} battery={device.st?.battery} /></td>\n                    <td>\n                        <DeviceControlGroup device={device} />\n                    </td>\n                </tr>)}\n\n                </tbody>\n            </table>\n\n        );\n    }\n}\n\nconst mappedProps = [\"isLoading\", \"time\", \"devices\", \"forceRender\"];\nconst ConnectedDevicePage = connect<{}, ZigbeeTableState, GlobalState, Actions>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedDevicePage;\n","export const isLeaveReqSend = (flags: number): boolean => {\n    return !!(flags & 0x01);\n}","import { Component, ComponentChild, Fragment, FunctionalComponent, h, VNode } from \"preact\";\n\nimport style from \"./style.css\";\nimport { genDeviceDetailsLink, genDeviceImageUrl, last } from \"../../utils\";\nimport cx from \"classnames\";\nimport { ZigbeeEvent, ZigbeePayload } from \"./types\";\nimport groupBy from \"lodash/groupBy\";\nimport { Device, Dictionary } from \"../../types\";\nimport DeviceControlGroup from \"../device-control\";\nimport Button from \"../button\";\nimport SafeImg from \"../safe-image\";\nimport PowerSourceComp from \"../power-source\";\nimport uniqWith from \"lodash/uniqWith\";\nimport isEqual from \"lodash/isEqual\";\n\nconst INTERVIEW_STEPS_COUNT = 9;\nconst DEVICE_NOT_RESPONDING_TIMEOUT = 5;\nconst DEVICE_MANUAL_WAKEUP_TIMEOUT = 5;\n\ninterface DeviceCardProps {\n    ieeeAddr: string;\n    events: ZigbeePayload[];\n\n    startInterview(nwkAddr: string, state: number): void;\n}\n\nconst EventLabels = new Map<ZigbeeEvent, string>([\n    [\"LeaveInd\", \"Left network\"],\n    [\"TcDeviceInd\", \"Device joined\"],\n    [\"DeviceAnnceInd\", \"Announce received\"],\n    [\"SimpleDescRsp\", \"Clusters received\"],\n    [\"ActiveEpRsp\", \"Endpoints received\"],\n    [\"ModelRcv\", \"Model received\"],\n    [\"NodeDescRsp\", \"Processing interviews\"],\n    [\"PowerSrcRcv\", \"Power source received\"],\n    [\"ConfRsp\", \"Finished interview\"]\n]);\n\nconst RowCol: FunctionalComponent<{ title: string; content: ComponentChild }> = ({ title, content }) => {\n    return (\n        <div class={`row ${style[\"scale-in-center\"]}`}>\n            <div class=\"col-5 text-nowrap\">{title}</div>\n            <div class=\"col\">{content}</div>\n        </div>\n    );\n};\n\ninterface EventRowProps {\n    eventName: ZigbeeEvent;\n    events: ZigbeePayload[];\n}\n\nconst EventRow: FunctionalComponent<EventRowProps> = ({ eventName, events }): VNode<any> => {\n    switch (eventName) {\n        case \"LeaveInd\":\n            return (\n                <RowCol title=\"Old nwkAddr:\" content={<del>{last(events).nwkAddr}</del>} />\n            );\n\n\n        case \"TcDeviceInd\":\n            return (\n                <Fragment>\n                    <RowCol title=\"New nwkAddr:\" content={last(events).nwkAddr} />\n                    {\n                        last(events).ParentnwkAddr ? (\n                            <RowCol title=\"ParentnwkAddr:\" content={last(events).ParentnwkAddr} />\n                        ) : null\n                    }\n                </Fragment>\n            );\n\n\n        case \"DeviceAnnceInd\":\n            return <RowCol title=\"Type:\" content={last(events).type} />;\n\n\n        case \"PowerSrcRcv\":\n            return <RowCol title=\"Power source:\" content={<PowerSourceComp source={last(events).PowerSource} />} />;\n\n        case \"SimpleDescRsp\":\n            return <Fragment>\n                {uniqWith(events\n                        .filter(e => e.ep)\n                        .map(({ ep, ProfileId, DeviceId }) => ({ ep, ProfileId, DeviceId }))\n                    , isEqual)\n                    .map(evt => (\n                        <RowCol title={`Endpoint #${evt.ep}:`}\n                                content={`ProfileId=${evt.ProfileId} DeviceId=${evt.DeviceId}`} />\n                    ))}\n            </Fragment>;\n\n\n        case \"ModelRcv\":\n            return (\n                <Fragment>\n                    <RowCol title=\"ManufName:\" content={last(events).ManufName || <small>detecting...</small>} />\n                    <RowCol title=\"Model:\" content={\n                        <Fragment>\n                            <div>{last(events).ModelId}</div>\n                            <SafeImg class={cx(style[\"device-image\"])}\n                                     src={genDeviceImageUrl({ ModelId: last(events).ModelId } as Device)\n                                     } />\n                        </Fragment>\n                    } />\n                </Fragment>\n            );\n\n        default:\n            return undefined;\n\n    }\n};\n\ninterface DeviceCardState {\n    currentTimestamp: number;\n    updateTimerId: number;\n    manualInterviewStarted: boolean;\n    isDone: boolean;\n}\n\nexport default class DeviceCard extends Component<DeviceCardProps, DeviceCardState> {\n    constructor() {\n        super();\n        const updateTimerId = window.setInterval(() => {\n            this.setState({ currentTimestamp: Date.now() });\n        }, 1000);\n\n\n        this.state = {\n            isDone: false,\n            manualInterviewStarted: false,\n            updateTimerId,\n            currentTimestamp: Date.now()\n        };\n    }\n\n    getLastEvent(): ZigbeePayload {\n        const { events } = this.props;\n        return events[events.length - 1];\n    }\n\n    getLastUpdateTime(): number {\n        const { timestamp: messageTimestamp } = this.getLastEvent();\n        const { currentTimestamp } = this.state;\n        return Math.max(0, Math.round((currentTimestamp - messageTimestamp) / 1000));\n    }\n\n    getLastUpdateTimeMessage(): string {\n        const lastMessage = this.getLastUpdateTime();\n        return `${lastMessage} sec ago`;\n    }\n\n    getInterviewText(): string {\n        const lastEvent = this.getLastEvent();\n        return EventLabels.get(lastEvent.event);\n    }\n\n    onInterviewClick = (nwkAddr: string): void => {\n        const { startInterview } = this.props;\n        startInterview(nwkAddr, 0);\n        this.setState({manualInterviewStarted: true});\n    };\n\n    renderManualInterviewHelper(): ComponentChild {\n        const { manualInterviewStarted } = this.state;\n        const { ieeeAddr } = this.props;\n\n        const lastUpdateTime = this.getLastUpdateTime();\n        if (manualInterviewStarted && lastUpdateTime > DEVICE_MANUAL_WAKEUP_TIMEOUT) {\n            return (<div class={`row ${style[\"scale-in-center\"]}`}>\n                <div class={`col-12 ${style.blink}`}>Press wakeup button</div>\n            </div>);\n        }\n        if (!manualInterviewStarted && lastUpdateTime > DEVICE_NOT_RESPONDING_TIMEOUT)\n            return (\n                <div class={`row ${style[\"scale-in-center\"]}`}>\n                    <div class=\"col-5\">Start interview:</div>\n                    <div class=\"col\">\n                        <Button<string> className=\"btn btn-normal btn-sm\" onClick={this.onInterviewClick}\n                                        item={ieeeAddr}><i className=\"fa fa-play\" /></Button>\n                    </div>\n                </div>\n            );\n    }\n\n    // eslint-disable-next-line react/no-deprecated\n    componentWillReceiveProps(nextProps: Readonly<DeviceCardProps>, nextContext: any): void {\n        const { events } = nextProps;\n        const lastEvent = events[events.length - 1];\n        const { updateTimerId } = this.state;\n        if (lastEvent && lastEvent.event === \"PowerSrcRcv\") {\n            // progressValue = 100;\n            window.clearInterval(updateTimerId);\n            this.setState({ isDone: true });\n        }\n    }\n\n    render(): ComponentChild {\n\n        const { isDone } = this.state;\n        const { events, ieeeAddr } = this.props;\n        const groupedEvents = groupBy(events, \"event\") as Dictionary<ZigbeePayload[]>;\n        const eventsCount = Object.keys(groupedEvents).length;\n        const progressValue = Math.round(100 / INTERVIEW_STEPS_COUNT * eventsCount);\n\n        return (\n            <div className={cx(\"card\", \"col-sm-4\", style[\"discovery-card\"], style[\"scale-in-center\"])}>\n                <div class=\"card-header\">\n                    Device <a href={genDeviceDetailsLink(ieeeAddr)}>{ieeeAddr}</a>\n                    <p class=\"card-text\"><small class=\"text-muted\">\n                        {isDone ? \"Successfully joined!\" : `Last updated ${this.getLastUpdateTimeMessage()}`}</small>\n                    </p>\n                </div>\n                <div className=\"card-body\">\n                    {!isDone ? (<p className=\"card-text\">\n                        <div className=\"progress\">\n                            <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\n                                 style={`width: ${progressValue}%;`} aria-valuenow={progressValue} aria-valuemin=\"0\"\n                                 aria-valuemax=\"100\">{progressValue}%\n                            </div>\n                        </div>\n                    </p>) : null}\n\n\n                    <div class={`row ${style[\"scale-in-center\"]}`}>\n                        <div class=\"col-5\">Current status:</div>\n                        <div class=\"col\">{this.getInterviewText()}</div>\n                    </div>\n\n                    {\n                        Object.entries(groupedEvents).map(([eventName, events]) => ((\n                            <EventRow key={eventName} eventName={eventName as ZigbeeEvent} events={events} />)))\n                    }\n                    {\n                        isDone ? null : this.renderManualInterviewHelper()\n                    }\n                </div>\n                {isDone ? <div className=\"card-footer\">\n                    <DeviceControlGroup device={{ nwkAddr: ieeeAddr, ieeeAddr } as Device} />\n                </div> : null}\n            </div>\n        );\n    }\n}","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { WebsocketMessage } from \"./components/discovery/types\";\nimport { Notyf } from \"notyf\";\nimport {PubSub} from \"pubsub-ts\";\nimport { Dictionary } from \"./types\";\ntype ZigbeeCallback = (payload: WebsocketMessage) => void;\n\nclass EventEmitter {\n    events: Dictionary<Function[]>;\n    constructor() {\n        this.events = {};\n    }\n    on(event: string, listener: Function): Function {\n        if (typeof this.events[event] !== 'object') {\n            this.events[event] = [];\n        }\n        this.events[event].push(listener);\n        return () => this.removeListener(event, listener);\n    }\n    removeListener(event: string, listener: Function): void {\n        if (typeof this.events[event] === 'object') {\n            const idx = this.events[event].indexOf(listener);\n            if (idx > -1) {\n                this.events[event].splice(idx, 1);\n            }\n        }\n    }\n    emit(event: string, ...args) {\n        if (typeof this.events[event] === 'object') {\n            this.events[event].forEach(listener => listener.apply(this, args));\n        }\n    }\n    once(event: string, listener: Function) {\n        const remove = this.on(event, (...args) => {\n            remove();\n            listener.apply(this, args);\n        });\n    }\n}\n\nexport default class WebsocketManager {\n    ws: ReconnectingWebSocket;\n    publisher: PubSub.Publisher;\n    em: EventEmitter;\n    categories: string[];\n\n    remoteSubscribe = (category: string): void => {\n        if (!this.categories.includes(category)) {\n            this.categories.push(category);\n            this.ws.send(JSON.stringify({ action: \"subscribe\", category }));\n        }\n    }\n\n    private connect(): void {\n        const { hostname } = document.location;\n        let wsUrl = `ws://${document.location.hostname}:81/log`;\n        if (hostname === \"localhost\") {\n            const { search } = document.location;\n            if (hostname === \"localhost\") {\n                if (search.indexOf(\"gate\") > 0) {\n                    wsUrl = `ws://192.168.1.209:81/log`;\n                } else {\n                    wsUrl = `ws://localhost:8579`;\n                }\n            }\n        }\n        this.ws = new ReconnectingWebSocket(wsUrl);\n        this.ws.addEventListener(\"open\", () => {\n            this.categories.forEach(this.remoteSubscribe);\n        })\n        this.ws.addEventListener(\"message\", this.onMessageReceive);\n    }\n\n    constructor() {\n        this.categories = [];\n        this.em = new EventEmitter();\n        // this.publisher = new PubSub.Publisher();\n        this.connect();\n    }\n    onMessageReceive = (wsEvent: MessageEvent): void => {\n        try {\n            const event = JSON.parse(wsEvent.data) as WebsocketMessage;\n            this.em.emit(event.category, event);\n            // this.publisher.notify(event.category, event);\n        } catch (e) {\n            new Notyf().error(`Cant parse json, ${e}`);\n            console.log(`Cant parse json, ${e}`, wsEvent.data);\n        }\n    };\n\n    subscribe(eventCategory: string, consumer: ZigbeeCallback): Function {\n        this.remoteSubscribe(eventCategory);\n        return this.em.on(eventCategory, consumer)\n    }\n}\n\n\nconst manager = new WebsocketManager();\n\nexport { manager };","import { Component, ComponentChild, h } from \"preact\";\nimport { BindRule, Device } from \"../../types\";\nimport { ZigbeeClusters } from \"./clusters\";\nimport BindRow from \"./bind-row\";\nimport actions, { Actions } from \"../../actions\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport { Notyf } from \"notyf\";\n\n\nexport const getClusterName = (id: number, addBraces = true): string => {\n    if (ZigbeeClusters[id]) {\n        const cleanName = (ZigbeeClusters[id] as string).replace(/^ZCL_CLUSTER_ID_/, \"\");\n        return addBraces ? ` (${cleanName})` : cleanName;\n    }\n    return \"\";\n};\n\ninterface PropsFromStore {\n    device: Device;\n    devices: Device[];\n    bindRules: BindRule[];\n}\n\nexport class Bind extends Component<PropsFromStore & Actions, {}> {\n    onRuleChange = (idx: number, rule: BindRule): void => {\n        const { bindRules, setBindRules } = this.props;\n        const copyRules = [...bindRules];\n        copyRules[idx] = rule;\n        setBindRules(copyRules);\n    };\n\n    onBindClick = async (rule: BindRule): Promise<void> => {\n        const { device, createBind, getDeviceBinds } = this.props;\n        await createBind(device.nwkAddr, rule)\n\n        await getDeviceBinds(device.nwkAddr);\n        new Notyf().success(`Created bind rule`);\n\n    };\n\n    onUnBindClick = async (rule: BindRule): Promise<void> => {\n        const { device, removeBind, getDeviceBinds } = this.props;\n        await removeBind(device.nwkAddr, rule);\n        await getDeviceBinds(device.nwkAddr);\n        new Notyf().success(`Removed bind rule`);\n\n    };\n\n    renderBindsTable(): ComponentChild {\n        const { bindRules, devices, device } = this.props;\n        return (\n            <table class=\"table table-striped table-borderless\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Source Cluster/Ep</th>\n                        <th scope=\"col\">DstNwkAddr</th>\n                        <th scope=\"col\">DstEp</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        bindRules.map((rule, idx) => <BindRow\n                            key={idx}\n                            onUnBindClick={this.onUnBindClick}\n                            onBindClick={this.onBindClick}\n                            onChange={this.onRuleChange}\n                            device={device}\n                            idx={idx}\n                            rule={rule}\n                            devices={devices} />)\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    render(): ComponentChild {\n        const { device } = this.props;\n        if (device) {\n            return this.renderBindsTable();\n        }\n        return \"Loading...\";\n\n    }\n}\n\nconst mappedProps = [\"device\", \"devices\", \"bindRules\"];\n\nexport default connect<{}, {}, GlobalState, PropsFromStore>(mappedProps, actions)(Bind);","import { Component, ComponentChild, h } from \"preact\";\nimport flatten from \"lodash/flatten\";\nimport groupBy from \"lodash/groupBy\";\nimport sortBy from \"lodash/sortBy\";\nimport cx from \"classnames\";\nimport { toHex } from \"../../utils\";\nimport { getClusterName } from \"./bind\";\nimport { BindRule, Device } from \"../../types\";\n\nconst fields = [\"DstNwkAddr\", \"ClusterId\", \"SrcEp\", \"DstEp\"];\n\nfunction isValidBindRule(rule: BindRule): rule is BindRule {\n    return fields.some(key => rule[key] !== undefined);\n}\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.nwkAddr} (${device.friendly_name ? device.friendly_name : device.ModelId})`;\n};\ninterface BindRowProps {\n    onChange?(idx: number, rule: BindRule): void;\n\n    onBindClick?(rule: BindRule): void;\n\n    onUnBindClick?(rule: BindRule): void;\n\n    idx: number;\n    rule: BindRule;\n    devices: Device[];\n    device: Device;\n}\n\nexport default class BindRow extends Component<BindRowProps, {}> {\n\n\n    isExistingBinding(): boolean {\n        const { rule } = this.props;\n        return rule.id !== undefined;\n    }\n\n    onDstChange = (evt) => {\n        const { idx, rule, onChange } = this.props;\n        const { value } = evt.target;\n        onChange && onChange(idx, { ...rule, DstNwkAddr: value, DstEp: undefined });\n    };\n\n    renderDstSelect(): ComponentChild {\n        const { devices, rule, device } = this.props;\n        //exclude self from select\n        const options = sortBy(Object.entries(groupBy(devices.filter(d => d.nwkAddr !== device.nwkAddr), d => {\n            const inC = flatten(Object.values(d.ep ?? {}).map(ep => Object.keys(ep.In ?? {}).map(c => parseInt(c, 10))));\n            return inC.includes(rule.ClusterId);\n        })), (kvp) => kvp[0] !== \"true\")\n        .map(([hasSelectedEpStr, devices]) => {\n            const hasSelectedEp = hasSelectedEpStr === \"true\";\n            const label = hasSelectedEp ? \"Cluster found\" : \"Cluster not found\"\n            return <optgroup label={label}>{\n                devices.map(device => <option selected={device.nwkAddr === rule.DstNwkAddr} value={device.nwkAddr}>{getDeviceDisplayName(device)}</option>)\n            }</optgroup>\n        });\n\n        options.unshift(<option hidden>Select device</option>);\n\n        return <select disabled={this.isExistingBinding()} onChange={this.onDstChange}\n            class={cx(\"form-control\", { \"form-control-plaintext\": this.isExistingBinding() })}>{options}</select>;\n    }\n\n\n    onClusterChange = (evt): void => {\n        const { onChange, rule, idx } = this.props;\n        const { value } = evt.target;\n        const [SrcEp, ClusterId] = value.split(\",\").map(p => parseInt(p, 10));\n        onChange && onChange(idx, { ...rule, SrcEp, ClusterId, DstNwkAddr: undefined });\n    };\n\n    renderClusterId(): ComponentChild {\n        const { device, rule } = this.props;\n        const optionGroups = Object.entries(device.ep ?? {}).map(([epNumber, ep]) => {\n            const clusters = Object.keys(ep.Out ?? {}).map(c => parseInt(c, 10));\n            return <optgroup label={`Endpoint: #${epNumber}`}>\n                {clusters.map(c => <option selected={c === rule.ClusterId && parseInt(epNumber, 10) == rule.SrcEp}\n                    value={[epNumber, c.toString()]}>{toHex(c, 4)}{getClusterName(c, true)}</option>)}\n            </optgroup>;\n        });\n        optionGroups.unshift(<option hidden>Select cluster</option>);\n\n        return <select disabled={this.isExistingBinding()} onChange={this.onClusterChange}\n            class={cx(\"form-control\", { \"form-control-plaintext\": this.isExistingBinding() })}>{optionGroups}</select>;\n    }\n\n    onDstEpChange = (evt): void => {\n        const { onChange, rule, idx } = this.props;\n        const { value } = evt.target;\n        onChange && onChange(idx, { ...rule, DstEp: parseInt(value, 10) });\n    };\n\n    renderDstEp(): ComponentChild {\n        const { devices, rule } = this.props;\n        const dstDevice = devices.find((d) => d.nwkAddr === rule.DstNwkAddr);\n\n        let options = [];\n\n        if (dstDevice) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const dstEndpoints = groupBy(Object.entries(dstDevice.ep ?? {}), ([epName, ep]) => Object.prototype.hasOwnProperty.call(ep.In ?? {}, rule.ClusterId));\n\n\n            options = options.concat(\n                sortBy(Object.entries(dstEndpoints), (kvp) => kvp[0] !== \"true\")\n                    .map(([has, endpoints]) =>\n                        <optgroup label={(has == \"true\" ? 'Cluster found' : \"Cluster not found\")}>\n                            {\n                                endpoints\n                                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                                    .map(([epName, ep]) => <option\n                                        value={epName}\n                                        selected={parseInt(epName, 10) === rule.DstEp}>{epName}</option>)\n                            }\n                        </optgroup>));\n        }\n        options.unshift(<option hidden>Select destination</option>);\n\n        return <select disabled={this.isExistingBinding()} onChange={this.onDstEpChange}\n            class={cx(\"form-control\", { \"form-control-plaintext\": this.isExistingBinding() })}>{options}</select>;\n\n    }\n\n    onBindClick = (): void => {\n        const { onBindClick, rule } = this.props;\n        onBindClick && onBindClick(rule);\n    };\n    onUnBindClick = (): void => {\n        const { onUnBindClick, rule } = this.props;\n        onUnBindClick && onUnBindClick(rule);\n    };\n\n    renderActionButton(): ComponentChild {\n        const { rule } = this.props;\n        return (\n            this.isExistingBinding() ? (\n                <button onClick={this.onUnBindClick} type=\"button\" class=\"btn btn-danger w-100\">Unbind</button>\n            ) : (\n                    <button disabled={!isValidBindRule(rule)} onClick={this.onBindClick} type=\"button\"\n                        class=\"btn btn-primary w-100\">Bind</button>\n                )\n\n        );\n    }\n\n    render(): ComponentChild {\n        const { idx } = this.props;\n        return (\n            <tr>\n                <th scope=\"row\">{idx + 1}</th>\n                <td>{this.renderClusterId()}</td>\n                <td>{this.renderDstSelect()}</td>\n                <td>{this.renderDstEp()}</td>\n                <td>{this.renderActionButton()}</td>\n            </tr>\n        );\n    }\n}","import { Component, ComponentChild, h } from \"preact\";\n\nimport style from \"./style.css\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { TouchLinkDevice } from \"../../types\";\nimport Button from \"../button\";\nimport { Notyf } from \"notyf\";\n\ninterface DeviceCardProps {\n    device: TouchLinkDevice;\n    touchlinkIdentify(dev: string): Promise<void>;\n    touchlinkRest(dev: string): Promise<void>;\n}\n\nexport default class TouchlinkDeviceCard extends Component<DeviceCardProps, {}> {\n    onIdentifyClick = async (): Promise<void> => {\n        const { touchlinkIdentify, device } = this.props;\n        await touchlinkIdentify(device.ieeeAddr);\n        new Notyf().success(`Sent identify commant to ${device.ieeeAddr}`);\n    }\n\n    onResetClick = async (): Promise<void> => {\n        const { touchlinkRest, device } = this.props;\n        await touchlinkRest(device.ieeeAddr);\n        new Notyf().success(`Sent reset commant to ${device.ieeeAddr}`);\n    }\n    render(): ComponentChild {\n        const { device } = this.props;\n        return (\n            <div className={cx(\"card\", \"col-sm-4\", style[\"discovery-card\"], style[\"scale-in-center\"])}>\n                <div class=\"card-header\">\n                    Device <a href={genDeviceDetailsLink(device.ieeeAddr)}>{device.ieeeAddr}</a>\n                    <p class=\"card-text\"><small class=\"text-muted\">\n                        Discovered TouchLink device</small>\n                    </p>\n\n                </div>\n                <div className=\"card-body\">\n                    <div class={`row ${style[\"scale-in-center\"]}`}>\n                        <div class=\"col-5\">LinkQuality:</div>\n                        <div class=\"col\">{device.LinkQuality}</div>\n                    </div>\n                </div>\n                <div className=\"card-footer\">\n                    <div className=\"btn-group btn-group-sm\" role=\"group\">\n                        <Button<void> className=\"btn btn-success\" onClick={this.onIdentifyClick}>Identify</Button>\n                        <Button<void> className=\"btn btn-danger\" onClick={this.onResetClick}>Reset</Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import { Component, ComponentChild, Fragment, h } from \"preact\";\nimport { Dictionary } from \"../../types\";\nimport { ZigbeePayload } from \"./types\";\nimport DeviceCard from \"./device-card\";\nimport Button from \"../button\";\nimport { Notyf } from \"notyf\";\nimport orderBy from \"lodash/orderBy\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\nimport WebsocketManager, { manager } from \"../../websocket\";\nimport { getDeviceDisplayName } from \"../device-page/bind-row\";\nimport TouchlinkDeviceCard from \"./touchlink-device-card\";\nwindow[\"wsEventsData\"] = window[\"wsEventsData\"] || [];\nconst wsEventsData: object[] = window['wsEventsData'];\n\ninterface DiscoveryState {\n    targetRouter: string;\n    updateTimerId: number;\n    joinDuration: number;\n    events: Dictionary<ZigbeePayload[]>;\n}\n\nexport class Discovery extends Component<GlobalState & Actions, DiscoveryState> {\n    constructor() {\n        super();\n\n        this.state = {\n            targetRouter: '0x0000',\n            updateTimerId: 0,\n            joinDuration: 0,\n            events: {}\n        };\n\n    }\n\n    processZigbeeEvent = ({ category, payload }): void => {\n        wsEventsData.push({ category, payload })\n\n        const message = { ...payload };\n        // console.log(\"processZigbeeEvent\", message);\n        message.timestamp = Date.now();\n        const { events } = this.state;\n        const { ieeeAddr } = message;\n        let { joinDuration, updateTimerId } = this.state;\n        switch (message.event) {\n            case \"stateChange\":\n                break;\n            case \"PermitJoin\":\n                joinDuration = message.duration;\n                window.clearInterval(updateTimerId);\n                updateTimerId = window.setInterval(() => {\n                    const { joinDuration, updateTimerId } = this.state;\n                    if (joinDuration <= 0) {\n                        window.clearInterval(updateTimerId);\n                    } else {\n                        this.setState({ joinDuration: joinDuration - 1 });\n                    }\n\n                }, 1000);\n                break;\n            default:\n                if (events[ieeeAddr]) {\n                    events[ieeeAddr].push(message);\n                } else {\n                    events[ieeeAddr] = [message];\n                }\n                break;\n\n        }\n        this.setState({ events, joinDuration, updateTimerId });\n    }\n\n    componentDidMount(): void {\n        const { getZigbeeDevicesList } = this.props;\n        console.log(\"use `copy(wsEventsData)` to copy events log\");\n        manager.subscribe(\"zigbee\", this.processZigbeeEvent);\n        getZigbeeDevicesList(true);\n    }\n    renderTLdevices(): ComponentChild {\n        const { touchlinkResuts, touchlinkRest, touchlinkIdentify } = this.props;\n        if (touchlinkResuts) {\n            return touchlinkResuts.devices.map(device => <TouchlinkDeviceCard\n                device={device}\n                touchlinkRest={touchlinkRest}\n                touchlinkIdentify={touchlinkIdentify}\n            />);\n        }\n        return null;\n    }\n    renderDevices(): ComponentChild {\n        const { startInterview } = this.props;\n        const { events } = this.state;\n        const sortedEvents = orderBy(Object.entries(events), ([_, events]) => events[0].timestamp).reverse();\n\n\n        return (<Fragment>\n            {this.renderJoinButton()}\n            <div className=\"row no-gutters\">\n                {this.renderTLdevices()}\n                {sortedEvents.map(([ieeeAddr, events]) => <DeviceCard startInterview={startInterview}\n                    ieeeAddr={ieeeAddr} events={events} />)}</div>\n        </Fragment>);\n\n    }\n\n    enableJoin = async (targetRouter = '0x0000'): Promise<void> => {\n        const { setJoinDuration } = this.props;\n        await setJoinDuration(255, targetRouter);\n        this.setState({ targetRouter });\n        new Notyf({ position: { x: \"left\", y: \"bottom\" } }).success(`Join enabled on ${targetRouter}`);\n    };\n    disableJoin = async (): Promise<void> => {\n        const { targetRouter } = this.state;\n        const { setJoinDuration } = this.props;\n        await setJoinDuration(0, targetRouter);\n        new Notyf({ position: { x: \"left\", y: \"bottom\" } }).success(\"Join disabled\");\n    };\n\n    renderJoinButton(): ComponentChild {\n        const { joinDuration } = this.state;\n        const { devices } = this.props;\n        const routers = devices.filter(d => d.type == \"Router\");\n        return (<div class=\"row h-100 justify-content-center align-items-center\">\n            {joinDuration <= 0 ? (\n                <div class=\"btn-group\">\n                    <Button<string> className=\"btn btn-success\" onClick={this.enableJoin} item={'0x0000'}>Enable\n                     join</Button>\n                    <button type=\"button\" class=\"btn btn-success dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <span class=\"sr-only\">Toggle</span>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a onClick={(): Promise<void> => this.enableJoin(\"\")} class=\"dropdown-item\" href=\"#\">All devices</a>\n                        {\n                            routers.map(router => <a onClick={(): Promise<void> => this.enableJoin(router.nwkAddr)} class=\"dropdown-item\" href=\"#\">{getDeviceDisplayName(router)}</a>)\n                        }\n                    </div>\n                </div>\n\n            ) : (<div>Join enabled for {joinDuration} seconds, <a href=\"#\" onClick={this.disableJoin}>Stop</a></div>)\n            }\n            {this.renderTlStartButton()}\n        </div>\n        );\n    }\n\n    renderEmptyScreen(): ComponentChild {\n        return (\n            <Fragment>\n                <div class=\"row h-100 justify-content-center align-items-center\">\n                    <h2>Nothing yet happened</h2>\n                </div>\n                {this.renderJoinButton()}\n            </Fragment>\n        );\n    }\n    fetchTlResults = async (): Promise<void> => {\n        const { touchlinkList, touchlinkResuts } = this.props;\n        if (!touchlinkResuts || touchlinkResuts.currentChannel !== 0) {\n            await touchlinkList();\n            setTimeout(this.fetchTlResults, 1000);\n        }\n\n    }\n    scanTL = async (): Promise<void> => {\n        const { touchlinkScan } = this.props;\n        await touchlinkScan();\n        await this.fetchTlResults();\n\n    }\n    renderTlStartButton(): ComponentChild {\n        const { touchlinkScanInProgress } = this.props;\n        return (\n        <span class=\"ml-5\">{touchlinkScanInProgress ? 'Scanning...' : <a href=\"#\" onClick={this.scanTL}>Scan TouchLink</a>}</span>\n        );\n    }\n\n    render(): ComponentChild {\n        const { touchlinkResuts } = this.props;\n        const { events } = this.state;\n        const hasAnyEvents = (Object.keys(events).length !== 0) || (touchlinkResuts && touchlinkResuts.devices.length > 0);\n        return <div class=\"container-fluid h-100\">{hasAnyEvents ? this.renderDevices() : this.renderEmptyScreen()}</div>\n    }\n}\n\nconst mappedProps = [\"isLoading\", \"time\", \"devices\", \"touchlinkResuts\", \"touchlinkScanInProgress\"];\nconst ConnectedDiscovery = connect<{}, DiscoveryState, GlobalState, Actions>(mappedProps, actions)(Discovery);\nexport default ConnectedDiscovery;\n","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\n\nimport { BindRule, Device, FileDescriptor, TouchLinkScanApiResponse } from \"./types\";\nimport { TimeInfo } from \"./components/discovery/types\";\nimport { LogLevel } from \"./components/log-viewer\";\nimport { ApiResponse } from \"./utils\";\n\n\nexport interface GlobalState {\n    forceRender: number;\n    isLoading: boolean;\n    isError: boolean | string;\n    device: Device | undefined;\n    devices: Device[];\n    bindRules: BindRule[];\n    time: TimeInfo | undefined;\n    logs: string[];\n    logLevel: LogLevel;\n\n\n    files: FileDescriptor[];\n    executionResults: ApiResponse<string> | null;\n\n    currentFileContent: string;\n    currentFile: FileDescriptor;\n\n\n    touchlinkResuts: TouchLinkScanApiResponse | null;\n    touchlinkScanInProgress: boolean;\n\n}\n\nconst initialState: GlobalState = {\n    forceRender: Date.now(),\n    device: undefined,\n    isLoading: false,\n    isError: false,\n    devices: [],\n    bindRules: [{} as BindRule],\n    time: undefined,\n    logs: [],\n    logLevel: LogLevel.LOG_DEBUG,\n\n\n    files: [],\n    executionResults: null,\n    currentFileContent: \"\",\n    currentFile: null,\n    touchlinkResuts: null,\n    touchlinkScanInProgress: false\n};\n\nconst store = process.env.NODE_ENV === 'production' ?  createStore(initialState) : devtools(createStore(initialState));\n\nexport default store;","import { Component, ComponentChild, createRef, h } from \"preact\";\nimport style from \"./style.css\";\nimport cx from \"classnames\";\nimport { Notyf } from \"notyf\";\nimport store, { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\nimport { connect } from \"unistore/preact\";\nimport { useEffect } from \"preact/hooks\";\nimport { manager } from \"../../websocket\";\n\nexport const enum LogLevel {\n    LOG_OFF,\n    LOG_NORMAL,\n    LOG_VERBOSE,\n    LOG_DEBUG\n}\n\nexport interface LogViewerState {\n    followLog: boolean;\n}\n\nexport class LogViewer extends Component<GlobalState & Actions, LogViewerState> {\n    ref = createRef<HTMLDivElement>();\n\n    constructor() {\n        super();\n        this.state = {\n            followLog: true\n        };\n    }\n\n    async componentDidMount(): Promise<void> {\n        const { fetchLogsBuffer, getCurrentLogLevel } = this.props;\n        await fetchLogsBuffer();\n        setTimeout(this.scrollToBottom, 500);\n        await getCurrentLogLevel();\n\n        manager.subscribe(\"log\", (data) => {\n            const { logs } = store.getState();\n            const copyLogs = [...logs, data.payload as string];\n            store.setState({ logs: copyLogs });\n        });\n    }\n\n\n    onFollowLogChange = (e: Event): void => {\n        e.preventDefault();\n        const { followLog } = this.state;\n        this.setState({ followLog: !followLog });\n    };\n\n    onClearScreenClick = (e: Event): void => {\n        const { clearLogs } = this.props;\n        clearLogs();\n    };\n    onClearCacheClick = async (e: Event): Promise<void> => {\n        const { clearLogsBuffer } = this.props;\n        await clearLogsBuffer();\n        new Notyf().success(\"Cache cleared\");\n    };\n\n    onLogLevelChange = async (e: Event): Promise<void> => {\n        const { setLogLevel, getCurrentLogLevel } = this.props;\n        const { value } = e.target as HTMLInputElement;\n        const logLevel = parseInt(value, 10);\n        await setLogLevel(logLevel);\n        getCurrentLogLevel();\n    };\n\n\n    scrollToBottom = (): void => {\n        this.ref.current.scrollTop = this.ref.current.scrollHeight;\n    };\n\n    render(): ComponentChild {\n        const { followLog } = this.state;\n        const { logLevel, logs } = this.props;\n\n        useEffect(() => {\n            followLog && this.scrollToBottom();\n        }, [followLog, logs.length]);\n\n        return (<div class=\"container-fluid h-100\">\n            <div class=\"row justify-content-around\">\n                <div class=\"col-sm-6 my-1\">\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button onClick={this.onClearScreenClick} type=\"button\" class=\"btn btn-secondary\">Clear screen\n                        </button>\n                        <button onClick={this.onClearCacheClick} type=\"button\" class=\"btn btn-danger\">Clear logs cache\n                        </button>\n                    </div>\n                </div>\n                <div class=\"col-sm-6 my-1\">\n                    <div class=\"row justify-content-end\">\n                        <div class=\"col-sm-4\">\n                            <select value={logLevel} class=\"custom-select\" onChange={this.onLogLevelChange}>\n                                <option value={LogLevel.LOG_OFF} selected>LOG_OFF</option>\n                                <option value={LogLevel.LOG_NORMAL} selected>LOG_NORMAL</option>\n                                <option value={LogLevel.LOG_VERBOSE}>LOG_VERBOSE</option>\n                                <option value={LogLevel.LOG_DEBUG}>LOG_DEBUG</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm2\">\n                            <div class=\"form-check form-check-inline\">\n                                <input checked={followLog} onChange={this.onFollowLogChange} class=\"form-check-input\"\n                                       type=\"checkbox\" id=\"followLog\" value=\"true\" />\n                                <label class=\"form-check-label\" for=\"followLog\">Follow log</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div ref={this.ref} class={cx(\"h-100\", style[\"log-main\"])}>\n                {logs.map((line, lineNum) =>\n                    <div class={style[\"log-line\"]}>\n                        <a class={style[\"log-line-num\"]}>{lineNum + 1}</a>\n                        <span>{line}</span>\n                    </div>)}\n            </div>\n        </div>);\n    }\n}\n\nconst mappedProps = [\"logs\", \"logLevel\"];\nconst ConnectedLogViewer = connect<{}, LogViewerState, GlobalState, Actions>(mappedProps, actions)(LogViewer);\nexport default ConnectedLogViewer;","import { Component, ComponentChild, h } from \"preact\";\nimport styles from \"./style.css\";\n\nexport interface Named {\n    name: string;\n}\n\ninterface TreeViewProps<T extends Named> {\n    items: T[];\n\n    onItemClick(item: T): void;\n\n    onDeleteClick(item: T): void;\n}\n\ninterface FileLinkProps<T extends Named> {\n    items: T;\n\n    onClick(item: T): void;\n\n    onDeleteClick(item: T): void;\n}\n\nclass TreeItem<T extends Named> extends Component<FileLinkProps<T>, {}> {\n    onClick = (): void => {\n        const { onClick, items } = this.props;\n        onClick(items);\n    };\n    onDeleteClick = (): void => {\n        const { onDeleteClick, items } = this.props;\n        onDeleteClick(items);\n    };\n\n    render(): ComponentChild {\n        const { items } = this.props;\n        return <div class={`list-group-item list-group-item-action bg-light ${styles[\"file-link\"]}`}>\n            <a onClick={this.onClick} href={\"#\"}>{items.name}</a>\n            <i onClick={this.onDeleteClick} class=\"fa fa-trash\" />\n        </div>;\n    }\n}\n\nexport default class TreeView<T extends Named> extends Component<TreeViewProps<T>, {}> {\n    render(): ComponentChild {\n        const { items, onDeleteClick, onItemClick } = this.props;\n\n        return <div>\n            {items.map(file => (<TreeItem onDeleteClick={onDeleteClick} items={file} onClick={onItemClick} />))}\n        </div>;\n    }\n}","import { Component, createRef, h } from \"preact\";\nimport CM, { EditorFromTextArea } from \"codemirror\";\nimport { parse } from \"luaparse\";\ninterface CodeMirrorProps {\n    code: string;\n    height?: string;\n    width?: string;\n    config: CM.EditorConfiguration;\n\n    onChange?(value: string): void;\n}\n\nCM && CM.registerHelper('lint', 'lua', (text) => {\n    const found = [];\n    try {\n        const parseResult = parse(text);\n        console.log(parseResult);\n    } catch (e) {\n        found.push({\n            from: CM.Pos(e.line - 1, e.column),\n            to: CM.Pos(e.line- 1, e.index),\n            message: e.message});\n        console.error(e);\n    }\n    return found;\n});\n\n\nexport default class CodeMirror extends Component<CodeMirrorProps, {}> {\n    ref = createRef<HTMLTextAreaElement>();\n    codeMirror: EditorFromTextArea;\n\n    constructor() {\n        super();\n    }\n\n    codemirrorValueChanged = (doc, change) => {\n        const { onChange } = this.props;\n        if (onChange && change.origin !== \"setValue\") {\n            onChange(doc.getValue());\n        }\n    };\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { config, code, height, width } = this.props;\n        this.codeMirror = CM.fromTextArea(current, config);\n        this.codeMirror.on(\"change\", this.codemirrorValueChanged);\n        this.codeMirror.setValue(code);\n        this.codeMirror.setSize(width, height);\n\n    }\n\n    // eslint-disable-next-line react/no-deprecated\n    componentWillReceiveProps(nextProps: Readonly<CodeMirrorProps>, nextContext: any): void {\n        const { height, width, code, config } = nextProps;\n        const { code: currentCode } = this.props;\n        Object.entries(config).forEach(([name, value]) => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.codeMirror.setOption(name, value);\n        });\n\n        this.codeMirror.setSize(width, height);\n        if (currentCode != code) {\n            const prevScrollPosition = this.codeMirror.getScrollInfo();\n            const prevCursor = this.codeMirror.getCursor();\n            this.codeMirror.setValue(code);\n            this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n            this.codeMirror.setCursor(prevCursor);\n        }\n    }\n\n    render() {\n        return (\n            <textarea ref={this.ref} />\n        );\n    }\n}","import { Component, ComponentChild, Fragment, h } from \"preact\";\n\nimport style from \"./style.css\";\nimport cx from \"classnames\";\nimport TreeView from \"../tree-view\";\nimport CodeMirror from \"./codemirror\";\nimport { Dictionary, FileDescriptor } from \"../../types\";\nimport { Notyf } from \"notyf\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\nimport actions, { Actions } from \"../../actions\";\n\ninterface CodeEditorState {\n    sideBarIsVisible: boolean;\n}\n\nexport class CodeEditor extends Component<GlobalState & Actions, CodeEditorState> {\n    constructor() {\n        super();\n        this.state = {\n            sideBarIsVisible: true\n        };\n    }\n\n    onCodeChange = (code): void => {\n        const { setCurrentFileContent } = this.props;\n        setCurrentFileContent(code);\n    };\n\n    onExecuteCode = (): void => {\n        const { currentFileContent, evalCode } = this.props;\n        evalCode(currentFileContent).then();\n    };\n    onSaveCode = (): void => {\n        const { currentFile, currentFileContent, writeFile } = this.props;\n        writeFile(currentFile.name, currentFileContent).then(() => new Notyf().success(`Saved ${currentFile.name}`));\n    };\n\n\n    onCreateFile = async (): Promise<void> => {\n        const { writeFile } = this.props;\n        let fileName = prompt(\"Enter file name\");\n        if (fileName) {\n            if (!fileName.startsWith(\"/\")) {\n                fileName = `/${fileName}`;\n            }\n            await writeFile(fileName, \"\");\n            this.loadFiles(\"/\");\n        }\n    };\n\n    onDeleteClick = async (file: FileDescriptor): Promise<void> => {\n        const { deleteFile } = this.props;\n        if (confirm(`Delete ${file.name}?`)) {\n            await deleteFile(file);\n            this.loadFiles(\"/\");\n        }\n    };\n    loadFile = (file: FileDescriptor): void => {\n        const { readFile } = this.props;\n        readFile(file);\n    };\n\n\n    renderCodeExecutionResults(): ComponentChild {\n        const { executionResults } = this.props;\n\n        if (executionResults) {\n            return <div class={cx(\"h-24\", {\n                \"text-success\": executionResults.success,\n                \"text-danger\": !executionResults.success\n            })}>\n                Output:\n                <pre><code>{executionResults.result ?? \"NO RESPONSE\"}</code></pre>\n            </div>;\n        }\n        return null;\n\n    }\n\n    componentDidMount(): void {\n        this.loadFiles(\"/\");\n    }\n\n    loadFiles(path: string): void {\n        const { getFilesList } = this.props;\n        getFilesList(path);\n    }\n\n    toggleSideBar = (): void => {\n        const { sideBarIsVisible } = this.state;\n        this.setState({ sideBarIsVisible: !sideBarIsVisible });\n    };\n\n    getFileType(): string {\n        const fileExtPattern = /\\.([0-9a-z]+)$/i;\n        const { currentFile } = this.props;\n        if (currentFile) {\n            const { name } = currentFile;\n            if (fileExtPattern.test(name)) {\n                const [extWithDot, ext] = fileExtPattern.exec(name);\n                return ext;\n            }\n        }\n        return \"\";\n    }\n\n    onFormatClick = (): void => {\n        const { currentFileContent, setCurrentFileContent } = this.props;\n        if (this.getFileType() === \"json\") {\n            try {\n                const res = JSON.parse(currentFileContent);\n                setCurrentFileContent(JSON.stringify(res, null, 2));\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            new Notyf().error(\"Not implemented 😢\");\n        }\n    };\n\n    getMode(): string | Dictionary<string | boolean> {\n\n        switch (this.getFileType()) {\n            case \"json\":\n                return {\n                    name: \"javascript\",\n                    json: true\n                };\n            case \"script\":\n            case \"lua\":\n                return \"lua\";\n            default:\n                return \"\";\n        }\n\n    }\n\n    render(): ComponentChild {\n        const { sideBarIsVisible } = this.state;\n        const { currentFileContent, executionResults, files, currentFile, clearExecutionResults } = this.props;\n\n        const config = {\n            mode: this.getMode(),\n            theme: \"dracula\",\n            styleActiveLine: true,\n            lineNumbers: true,\n            lint: true,\n            gutters: [\"CodeMirror-lint-markers\"],\n            extraKeys: {\n                \"Ctrl-E\": this.onExecuteCode,\n                \"Cmd-E\": this.onExecuteCode,\n                \"Ctrl-S\": this.onSaveCode,\n                \"Cmd-S\": this.onSaveCode\n            }\n        };\n        const hasExecutionResults = !!executionResults;\n        const hasCode = currentFileContent && currentFileContent.length;\n\n\n        return (<div className={cx(\"h-100 px-0 d-flex\", style[\"code-editor\"])}>\n            <div class={cx(\"d-flex w-100\", style.wrapper, {\n                [style.toggled]: !sideBarIsVisible\n            })}>\n\n                <div class={cx(\"bg-light border-right position-relative\", style[\"sidebar-wrapper\"])}>\n                    <div class={style[\"sidebar-heading\"]}>Files</div>\n                    <div class=\"list-group list-group-flush\">\n\n                        <TreeView onItemClick={this.loadFile} onDeleteClick={this.onDeleteClick} items={files} />\n                        <button onClick={this.onCreateFile} type=\"button\"\n                            class={cx(\"btn\", \"btn-primary\", style[\"new-file\"])}>New file\n                        </button>\n                    </div>\n\n                </div>\n\n                <div class={style[\"page-content-wrapper\"]}>\n\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\n                        <button onClick={this.toggleSideBar} class=\"btn btn-primary\">Toggle files</button>\n                        {currentFile ? <button type=\"button\" class=\"btn btn-success\"\n                            onClick={this.onSaveCode}>Save(Ctrl-S)</button> : null}\n                        {hasCode ? (\n                            <Fragment>\n                                <button type=\"button\" class=\"btn btn-danger\" onClick={this.onExecuteCode}>Run(Ctrl-E)\n                                </button>\n                                {\n                                    this.getFileType() === \"json\" ? (\n                                        <button type=\"button\" class=\"btn btn-primary\"\n                                            onClick={this.onFormatClick}>Format\n                                        </button>\n                                    ) : null\n                                }\n\n                            </Fragment>\n                        ) : null}\n                        {hasExecutionResults ?\n                            <button type=\"button\" class=\"btn btn-primary\" onClick={clearExecutionResults}>Clear\n                                output</button> : null}\n\n                        <div>\n                            {currentFile ? <input type=\"text\" placeholder={currentFile.name} readOnly /> : null}\n                        </div>\n                    </nav>\n\n\n                    <div class=\"h-75\">\n                        <div class={\"h-75\"}>\n                            <CodeMirror height={\"100%\"} width={\"100%\"} code={currentFileContent} config={config}\n                                onChange={this.onCodeChange} />\n                        </div>\n\n                        {this.renderCodeExecutionResults()}\n                    </div>\n                </div>\n            </div>\n        </div>);\n    }\n\n}\n\nconst mappedProps = [\"isLoading\", \"files\", \"executionResults\", \"currentFileContent\", \"currentFile\"];\nconst ConnectedCodeEditor = connect<{}, CodeEditorState, GlobalState, Actions>(mappedProps, actions)(CodeEditor);\nexport default ConnectedCodeEditor;\n","import { FunctionalComponent, h, RefObject } from \"preact\";\nimport { forwardRef } from \"preact/compat\";\n\n\ninterface UniversalEditorProps {\n    value: unknown;\n    onChange(value: unknown): void;\n    [k: string]: unknown;\n}\n\n\nconst UniversalEditor: FunctionalComponent<UniversalEditorProps> = forwardRef((props, ref: RefObject<HTMLInputElement>) => {\n    const { value, onChange, ...rest } = props;\n    const changeHandler = (event) => {\n        const { target } = event;\n        switch (target.type) {\n            case \"checkbox\":\n                onChange(target.checked);\n                break;\n            case \"number\":\n                target.valueAsNumber != value && onChange(target.valueAsNumber);\n                break;\n            default:\n                target.value != value && onChange(target.value);\n                break;\n        }\n    };\n    switch (typeof value) {\n        case \"boolean\":\n            return <input ref={ref} {...rest} type=\"checkbox\" checked={value} onChange={changeHandler}\n                          class=\"form-check-input\" />;\n        case \"number\":\n            return <input step=\"any\" ref={ref} {...rest} type=\"number\" value={value} onBlur={changeHandler} />;\n        default:\n            return <input ref={ref} {...rest} type=\"text\" value={value as string} onBlur={changeHandler} />;\n    }\n});\nexport default UniversalEditor;","import { Component, ComponentChild, h } from \"preact\";\nimport { Device, Dictionary } from \"../../types\";\nimport style from \"./style.css\";\nimport UniversalEditor from \"../universal-editor\";\nimport actions, { Actions } from \"../../actions\";\nimport { Notyf } from \"notyf\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    device: Device | undefined;\n}\n\ntype DeviceParamTuple = [string, unknown];\n\n\nexport class SimpleBind extends Component<PropsFromStore & Actions, {}> {\n    setStateValue = async (name: string, value: unknown): Promise<void> => {\n        const { setStateValue, device, getDeviceInfo } = this.props;\n        await setStateValue(device.nwkAddr, name, value);\n        new Notyf().success(`Successfully updated state value ${name}=${value}`);\n        getDeviceInfo(device.nwkAddr);\n\n    };\n    setSimpleBind = async (name: string, value: unknown): Promise<void> => {\n        const { device, setSimpleBindValue, getDeviceInfo } = this.props;\n        await setSimpleBindValue(device.nwkAddr, name, value);\n        new Notyf().success(`Successfully updated simple bind value ${name}=${value}`);\n        getDeviceInfo(device.nwkAddr);\n    };\n\n    render(): ComponentChild {\n        const { device } = this.props;\n        if (device) {\n            return this.renderSimpleBinds();\n        }\n        return \"Loading...\";\n    }\n\n    refresh = async (name: string): Promise<void> => {\n        const { device, refreshState } = this.props;\n        await refreshState(device.nwkAddr, name);\n        new Notyf().success(`Requested state update ${device.nwkAddr} ${name}`);\n    }\n\n    renderSimpleBinds(): ComponentChild {\n        const { device } = this.props;\n        const simpleBindRules: Dictionary<string> = device.SB ?? {};\n\n        const kv = Object.entries(device.st ?? {});\n\n\n        return <table class=\"table table-striped table-borderless\">\n            <thead>\n                <tr>\n                    <th scope=\"col\" />\n                    <th scope=\"col\">Value</th>\n                    <th scope=\"col\">SB rule</th>\n                </tr>\n            </thead>\n            <tbody>\n                {kv.map((param: DeviceParamTuple) => (\n                    <tr class={style[\"props-row\"]}>\n                        <th scope=\"row\">{param[0]}</th>\n                        <td class={style[\"value-col\"]}>\n                            <UniversalEditor\n                                className=\"form-control-plaintext\"\n                                value={param[1]}\n                                onChange={(value): Promise<void> => this.setStateValue(param[0], value)}\n                            />\n                            <button type=\"button\" class={`btn ${style[\"refresh-btn\"]}`}><i class=\"fas fa-sync\" onClick={(): Promise<void> => this.refresh(param[0])} /></button>\n                        </td>\n                        <td>\n                            <UniversalEditor\n                                className=\"form-control form-control-plaintext\"\n                                value={simpleBindRules[param[0]] || \"\"}\n                                onChange={(value): Promise<void> => this.setSimpleBind(param[0], value)}\n                            />\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>;\n\n    }\n}\n\nconst mappedProps = [\"device\", \"forceRender\"];\n\nexport default connect<{}, {}, GlobalState, PropsFromStore>(mappedProps, actions)(SimpleBind);","import { Component, ComponentChild, Fragment, h } from \"preact\";\nimport { Device } from \"../../types\";\nimport SafeImg from \"../safe-image\";\nimport { genDeviceDetailsLink, genDeviceImageUrl, toHex } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport PowerSourceComp from \"../power-source\";\nimport style from \"./style.css\";\nimport { getClusterName } from \"./bind\";\nimport { connect } from \"unistore/preact\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    device: Device ;\n}\n\nexport class DeviceInfo extends Component<PropsFromStore, {}> {\n    render(): ComponentChild {\n        const { device } = this.props;\n        if (device) {\n            return this.renderDeviceInfo();\n        }\n        return \"Loading...\";\n    }\n\n    renderDeviceInfo(): ComponentChild {\n        const { device } = this.props;\n        const endpoints = Object.entries(device.ep ?? {}).map(([epName, ep]) => {\n            const inClusters = Object.entries(ep.In ?? {}).map(([clusterId]) => {\n                const cluster = parseInt(clusterId, 10);\n                return <small class={\"d-block text-nowrap text-truncate\"}\n                              title={toHex(cluster, 4)}>{getClusterName(cluster, false)}</small>;\n            });\n            const outClusters = Object.entries(ep.Out ?? {}).map(([clusterId]) => {\n                const cluster = parseInt(clusterId, 10);\n                return <small class={\"d-block text-nowrap text-truncate\"}\n                              title={toHex(cluster, 4)}>{getClusterName(cluster, false)}</small>;\n            });\n            return (<Fragment>\n                <dt class=\"col-5\">Endpoint #{epName}</dt>\n                <dl class={\"col-6\"} />\n\n                <dd class=\"col-5\">ProfileId</dd>\n                <dl class={\"col-7\"}>{ep.profId}</dl>\n\n                <dd class=\"col-5\">DeviceId</dd>\n                <dl class={\"col-7\"}>{ep.devId}</dl>\n\n                <dd class={\"col-5 text-nowrap\"}>Input clusters</dd>\n                <dl class=\"col-7\">{inClusters.length ? inClusters : <b>None</b>}</dl>\n                <dd class={\"col-5 text-nowrap\"}>Output clusters</dd>\n                <dl class=\"col-7\">{outClusters.length ? outClusters : <b>None</b>}</dl>\n\n            </Fragment>);\n        });\n        return (\n            <div class=\"card mb-3\">\n                <SafeImg class={`card-img-top ${style[\"device-pic\"]}`} src={genDeviceImageUrl(device)} />\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{device.type}</h5>\n\n                    <dl class=\"row\">\n                        {\n                            device.friendly_name ? (\n                                <Fragment>\n                                    <dt class=\"col-5\">Friendly name</dt>\n                                    <dd class=\"col-7\">{device.friendly_name}</dd>\n                                </Fragment>\n                            ) : null\n                        }\n\n\n                        <dt class=\"col-5\">ieeeAddr</dt>\n                        <dd class=\"col-7\">{device.ieeeAddr}</dd>\n\n                        <dt class=\"col-5\">nwkAddr</dt>\n                        <dd class=\"col-7\">{device.nwkAddr}</dd>\n\n                        <dt class=\"col-5\">Power source</dt>\n                        <dd class=\"col-7\"><PowerSourceComp source={device.PowerSource}\n                                                           battery={device?.st?.battery} /></dd>\n\n                        <dt class=\"col-5\">ManufName</dt>\n                        <dd class=\"col-7\">{device.ManufName}</dd>\n\n                        <dt class=\"col-5\">ModelId</dt>\n                        <dd class=\"col-7\">{device.ModelId}</dd>\n\n\n\n                        <dt class=\"col-5\">Routes</dt>\n                        <dd class=\"col-7\">{device?.Rtg?.map((route) => <a className={\"d-block\"}\n                                                                          href={genDeviceDetailsLink(route)}>{route}</a>)}</dd>\n                        {endpoints}\n                    </dl>\n\n                </div>\n                <div class=\"card-footer\">\n                    <DeviceControlGroup device={device} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"device\"];\n\nexport default connect<{}, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);","import { Component, ComponentChild, h } from \"preact\";\nimport Bind from \"../device-page/bind\";\nimport cx from \"classnames\";\n\nexport interface TabInfo {\n    name: string;\n    TabComponent: ComponentChild;\n}\n\ninterface TabPanelProps {\n    tabs: TabInfo[];\n    defaultTab?: string;\n}\n\ninterface TabPanelState {\n    activeTab: string;\n}\n\ninterface TabLinkProps {\n    name: string;\n    isActive: boolean;\n\n    onClick(arg1: string): void;\n}\n\nexport class TabLink extends Component<TabLinkProps, {}> {\n    onClick = (): void => {\n        const { name, onClick } = this.props;\n        onClick(name);\n    };\n\n    render(): ComponentChild {\n        const { name, isActive } = this.props;\n        return <a onClick={this.onClick} class={cx(\"nav-link\", { active: isActive })} id={`${name}-tab`}\n                  data-toggle=\"tab\" href={`#${name}`} role=\"tab\" aria-controls={name} aria-selected=\"true\">{name}</a>;\n    }\n}\n\nexport default class TabPanel extends Component<TabPanelProps, TabPanelState> {\n    constructor() {\n        super();\n        this.state = {\n            activeTab: \"Bind\"\n        };\n    }\n\n    componentDidMount(): void {\n        this.initializeDefaultTab();\n    }\n\n    initializeDefaultTab(): void {\n        const { defaultTab } = this.props;\n        if (defaultTab) {\n            this.setState({ activeTab: defaultTab });\n        }\n    }\n\n    onTabLinkClick = (activeTab: string): void => {\n        this.setState({ activeTab });\n    };\n\n\n    render(): ComponentChild {\n        const { activeTab } = this.state;\n        const { tabs } = this.props;\n\n        return (<div>\n                <ul class=\"nav nav-tabs\">\n                    {\n                        tabs.map(({ name }) => (\n                            <li key={name} class=\"nav-item\">\n                                <TabLink name={name} isActive={name === activeTab} onClick={this.onTabLinkClick} />\n                            </li>\n                        ))\n                    }\n                </ul>\n                <div class=\"tab-content\">\n                    {\n                        tabs.map(({ name, TabComponent }) => (\n                            <div key={name} class={cx(\"tab-pane fade\", {\n                                \"show active\": activeTab === name\n                            })}>{TabComponent}</div>\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import { Component, ComponentChild, h } from \"preact\";\nimport { connect } from \"unistore/preact\";\nimport actions, { Actions } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport SimpleBind from \"./simple-bind\";\nimport Bind from \"./bind\";\nimport DeviceInfo from \"./info\";\nimport TabPanel, { TabInfo } from \"../tab-panel\";\nimport style from \"./style.css\";\nimport WebsocketManager from \"../../websocket\";\n\ninterface DevicePageState {\n    dev: string;\n    activeTab: string;\n}\n\nexport class DevicePage extends Component<Actions & GlobalState, DevicePageState> {\n    constructor() {\n        super();\n        const { searchParams } = new URL(location.href);\n        const paramActiveTab = searchParams.get(\"activeTab\");\n        const deviceId = searchParams.get(\"dev\");\n        this.state = {\n            dev: deviceId,\n            activeTab: paramActiveTab ? paramActiveTab : \"Info\"\n        };\n    }\n\n    componentDidMount(): void {\n        this.initPage();\n    }\n\n\n\n    initPage(): void {\n        const { dev } = this.state;\n        const { getDeviceInfo, getZigbeeDevicesList, getDeviceBinds } = this.props;\n\n        getDeviceInfo(dev);\n        getDeviceBinds(dev);\n        getZigbeeDevicesList(true);\n    }\n\n    render(): ComponentChild {\n        const { isLoading, isError } = this.props;\n        const { activeTab } = this.state;\n\n        const tabs: TabInfo[] = [\n            {\n                name: \"Info\",\n                TabComponent: <DeviceInfo />\n            },\n            {\n                name: \"Bind\",\n                TabComponent: <Bind />\n            },\n            {\n                name: \"States\",\n                TabComponent: <SimpleBind />\n            }\n        ];\n        return (<div class={\"position-relative\"}>\n            {\n                isError ? <h1>{isError}</h1> : (\n                    isLoading ? (\n                        <div className={`${style.loader} spinner-grow text-primary`} role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    ) : null\n                )\n\n            }\n            <TabPanel defaultTab={activeTab} tabs={tabs} />\n        </div>);\n\n    }\n}\n\nconst mappedProps = [\"isLoading\", \"isError\", \"device\"];\nconst ConnectedDevicePage = connect<{}, DevicePageState, GlobalState, Actions>(mappedProps, actions)(DevicePage);\nexport default ConnectedDevicePage;","/* eslint-disable @typescript-eslint/camelcase */\n// Must be the first import\n\n\n\n\nif (process.env.NODE_ENV === 'development') {\n    // Must use require here as import statements are only allowed\n    // to exist at the top of a file.\n    require(\"preact/debug\");\n\n}\n\n// const poly = require(\"preact-cli/lib/lib/webpack/polyfills\");\nimport \"notyf/notyf.min.css\";\n\nimport habitat from \"preact-habitat\";\nimport ConnectedMap from \"./components/map\";\nimport ConnectedZigbeeTable from \"./components/zigbee\";\nimport ConnectedDiscovery from \"./components/discovery\";\nimport ConnectedLogViewer from \"./components/log-viewer\";\nimport ConnectedCodeEditor from \"./components/code-editor\";\nimport ConnectedDevicePage from \"./components/device-page\";\nimport store from \"./store\";\nimport { Provider } from \"unistore/preact\";\nimport { h, FunctionalComponent } from \"preact\";\nimport { manager } from \"./websocket\";\n\n\ninterface StateChangePayload {\n    name: string;\n    value: string | number | boolean;\n    ieeeAddr: string;\n\n}\n\nconst applyStateChange = (data: StateChangePayload): void => {\n    const state = store.getState();\n\n    let { devices, forceRender } = state\n    const { device } = state;\n    const ts = Date.now() / 1000;\n    if (device && device.ieeeAddr === data.ieeeAddr) {\n        forceRender = ts;\n        device.st && (device.st[data.name] = data.value);\n        device.last_seen = ts;\n    }\n    devices = devices.map(d => {\n        if (d.ieeeAddr === data.ieeeAddr) {\n            forceRender = ts;\n            d.st && (d.st[data.name] = data.value);\n            d.last_seen = ts;\n        }\n        return d;\n    });\n    store.setState({ device, devices, forceRender });\n}\n\nconst processZigbeData = (data): void => {\n    const { event, ...payload } = data;\n    switch (event) {\n        case \"stateChange\":\n            applyStateChange(payload as StateChangePayload);\n            break;\n        default:\n            break;\n\n    }\n}\nconst processZigbeeEvent = ({ category, payload }): void => {\n    switch (category) {\n        case \"zigbee\":\n            processZigbeData(payload);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nconsole.log(\"use `copy(wsEventsData)` to copy events log\");\nmanager.subscribe(\"zigbee\", processZigbeeEvent);\n\n\n\nconst DevicePageApp: FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedDevicePage /></Provider>\n);\nconst ZigbeeTableApp: FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedZigbeeTable /></Provider>\n);\n\nconst MapApp: FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedMap /></Provider>\n);\nconst DiscoveryApp: FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedDiscovery /></Provider>\n);\nconst LogViewerApp : FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedLogViewer /></Provider>\n);\nconst CodeEditorApp : FunctionalComponent<{}> = () => (\n    <Provider store={store}><ConnectedCodeEditor /></Provider>\n);\n\nconst initWidgets = (): void => {\n    habitat(ZigbeeTableApp).render({\n        selector: \"[data-widget-host=\\\"zigbee\\\"]\",\n        clean: true\n    });\n\n    habitat(DevicePageApp).render({\n        selector: \"[data-widget-host=\\\"device-page\\\"]\",\n        clean: true\n    });\n\n    habitat(MapApp).render({\n        selector: \"[data-widget-host=\\\"map\\\"]\",\n        clean: true\n    });\n\n    habitat(DiscoveryApp).render({\n        selector: \"[data-widget-host=\\\"discovery\\\"]\",\n        clean: true\n    });\n    habitat(LogViewerApp).render({\n        selector: \"[data-widget-host=\\\"log-viewer\\\"]\",\n        clean: true\n    });\n\n    habitat(CodeEditorApp).render({\n        selector: \"[data-widget-host=\\\"code-editor\\\"]\",\n        clean: true\n    });\n\n\n};\ndocument.addEventListener(\"DOMContentLoaded\", initWidgets);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"_1rk7BV3JOGLq0LBsDwlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug\":\"_1rcBQvphkleKOfovl_Pvke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashed-link\":\"_1fFt3mhoAjHdI9KjdXwiJG\",\"value-col\":\"_39TL8GArlQw7aUWe8UA51_\",\"refresh-btn\":\"_3r5EggfiVRgwjKpPbblG7x\",\"props-row\":\"_2fm-PHIZ1vjSCIb2ZiDh9g\",\"device-pic\":\"_3TwJuuVA3A34CV1N2Vm57a\",\"loader\":\"_3X7MQ7DTf8-WnWd6NzQ0Ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zigbee\":\"pyUw6XrDJwVDAd3O8540m\",\"actions\":\"gw3rbQq5ewCSIxGBpPmLW\",\"action-column\":\"_9SKic9U7zOc4ced8VnqrQ\",\"invisible\":\"xL9O5xYzyPwhLPC4mMolg\",\"adaptive\":\"_3muOVdl36jJiVia7saOlXF\",\"device-image\":\"_1iHkacKbhmIu3DVhNRYbcT\",\"nwk-addr\":\"EFe8Zugx_CKGG7nI77css\",\"ieee-addr\":\"_1GxvFsSniUTQeAfkPTn-cK\",\"manu-name\":\"_3hdFev3NLQTc3kbVCsXlHM\",\"device-pic\":\"_1mC0z2WyiQ2lZUxLOQpEt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"device-image\":\"_1hcagYbY_Y6eeTNwa8vpcB\",\"scale-in-center\":\"_215Q2JzCNabshB1BCJTrhS\",\"blink\":\"_16C5lzFK8yu8gOeBQzvevo\"};","module.exports = window.luaparse;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code-editor\":\"geoNa2kIUpUOXRRhXv41P\",\"new-file\":\"_3bamqu8MV-LdBWIqwXZF-m\",\"sidebar-wrapper\":\"_3W7vvcN5rn-Hks20WXtAxn\",\"sidebar-heading\":\"_3jzXMdkdqB1jZWSn8jJrxy\",\"page-content-wrapper\":\"_2b1ylNBPUCV70QwL8PCeVi\",\"wrapper\":\"_2iW__Y0Jv3LpP7xYpJL3Rn\",\"toggled\":\"_1QAgcfZ8fkCv8iLqfl7-tD\"};","module.exports = window.CodeMirror;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-link\":\"_1AT4Zc2jmRShgInKdjrlnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log-main\":\"_PTLkMdFkXUDWwzPaERqN\",\"log-line-num\":\"_3NyLFE6WWES_iOq0-i6PJP\",\"log-line\":\"t9x92HLE4CKZHxsr5l9VR\"};"],"sourceRoot":""}